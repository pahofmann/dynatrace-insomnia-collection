{
    "_type": "export",
    "__export_format": 4,
    "__export_date": "2022-10-25T12:55:33.642Z",
    "__export_source": "insomnia.desktop.app:v2022.6.0",
    "resources": [
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6d75ffeae",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb65977e4b9",
            "modified": 1666702455396,
            "created": 1666702455396,
            "url": "{{ base_url }}/api/v1.0/onpremise/backup/config",
            "name": "Return backup configuration overview",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455396,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb65977e4b9",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455406,
            "created": 1666702455406,
            "name": "Backup configuration",
            "description": "Backup configuration",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455406,
            "_type": "request_group"
        },
        {
            "_id": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "parentId": null,
            "modified": 1666702457301,
            "created": 1666702457301,
            "name": "Dynatrace Cluster API 1.0",
            "description": "Dynatrace Managed exposes cluster management functionality via REST endpoints. This interactive documentation also acts as a REST client you can use to interact with Dynatrace Managed clusters. \n\nTo authorize, use the API Token generated in [Settings - API Tokens page](/cmc#cm/apiToken). The HTTP status code of the response shows the result of your request. The expected response code for a successful request is documented individually per REST endpoint. Additionally the following error response codes can occur in our REST interface:\n\n* 400 - Bad Request: Some request parameters are not correct. See response body for details.\n* 401 - Unauthorized: A valid authorization header is required but is missing.\n* 403 - Forbidden: Execution of request is not allowed, e.g. api-token is invalid.\n* 404 - Not Found: Endpoint does not exist or some entities could not be found, e.g. User account.\n* 500 - Internal Server Error: See response body for details.\n* 556 - Upgrade in progress: Operation couldn't be performed during the upgrade.\n",
            "scope": "collection",
            "_type": "workspace"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb64a93fda9",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb65977e4b9",
            "modified": 1666702455396,
            "created": 1666702455396,
            "url": "{{ base_url }}/api/v1.0/onpremise/backup/config",
            "name": "Change backup configuration",
            "description": "",
            "method": "PUT",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"datacenter\": \"dc1\",\n  \"enabled\": true,\n  \"storagePath\": \"/efs/backup\",\n  \"includeRumData\": true,\n  \"includeLm20Data\": true,\n  \"includeTsMetricData\": true,\n  \"bandwidthLimitMbits\": 240,\n  \"maxEsSnapshotsToClean\": 30,\n  \"cassandraScheduledTime\": 22,\n  \"pauseBackups\": false\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455396,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6d4abcc27",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb65977e4b9",
            "modified": 1666702455395,
            "created": 1666702455395,
            "url": "{{ base_url }}/api/v1.0/onpremise/backup/config/status",
            "name": "Check status of change backup configuration",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [
                {
                    "name": "requestId",
                    "disabled": true,
                    "value": "string"
                }
            ],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455395,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb638b93a26",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb65977e4b9",
            "modified": 1666702455395,
            "created": 1666702455395,
            "url": "{{ base_url }}/api/v1.0/onpremise/backup/clusterCheckDir",
            "name": "Check if given directory is valid for backup in the cluster",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [
                {
                    "name": "dir",
                    "disabled": true,
                    "value": "string"
                },
                {
                    "name": "datacenter",
                    "disabled": true,
                    "value": "string"
                }
            ],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455395,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6fbf4f012",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68249921f",
            "modified": 1666702455391,
            "created": 1666702455391,
            "url": "{{ base_url }}/api/v1.0/onpremise/endpoint/additionalWebUiAddresses",
            "name": "Update additional WebUi addresses",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"additionalAddresses\": [\n    \"string\"\n  ]\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455391,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68249921f",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455405,
            "created": 1666702455405,
            "name": "Public endpoints",
            "description": "Public endpoints",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455405,
            "_type": "request_group"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6b2a672c1",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68249921f",
            "modified": 1666702455391,
            "created": 1666702455391,
            "url": "{{ base_url }}/api/v1.0/onpremise/endpoint/additionalWebUiAddresses",
            "name": "Get additional WebUi addresses",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455391,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6e96778c5",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68249921f",
            "modified": 1666702455390,
            "created": 1666702455390,
            "url": "{{ base_url }}/api/v1.0/onpremise/endpoint/beaconForwarderAddress",
            "name": "Get beacon forwarder address",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455390,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6e4ff6cca",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68249921f",
            "modified": 1666702455390,
            "created": 1666702455390,
            "url": "{{ base_url }}/api/v1.0/onpremise/endpoint/beaconForwarderAddress",
            "name": "Update beacon forwarder address",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"address\": \"string\"\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455390,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6c6eb6401",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68249921f",
            "modified": 1666702455389,
            "created": 1666702455389,
            "url": "{{ base_url }}/api/v1.0/onpremise/endpoint/publicIp/agents/{{ nodeId }}",
            "name": "Store node IP for OneAgents",
            "description": "",
            "method": "PUT",
            "body": {
                "mimeType": "application/json",
                "text": "\"string\""
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455389,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb651d78b37",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68249921f",
            "modified": 1666702455389,
            "created": 1666702455389,
            "url": "{{ base_url }}/api/v1.0/onpremise/endpoint/publicIp/agents/{{ nodeId }}",
            "name": "Get node IP for OneAgents",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455389,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb679bc3424",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68249921f",
            "modified": 1666702455388,
            "created": 1666702455388,
            "url": "{{ base_url }}/api/v1.0/onpremise/endpoint/publicIp/domain/{{ nodeId }}",
            "name": "Get node IP for domain",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455388,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb634247a0e",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68249921f",
            "modified": 1666702455388,
            "created": 1666702455388,
            "url": "{{ base_url }}/api/v1.0/onpremise/endpoint/publicIp/domain/{{ nodeId }}",
            "name": "Store node IP for domain",
            "description": "",
            "method": "PUT",
            "body": {
                "mimeType": "application/json",
                "text": "\"string\""
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455388,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb66b00b167",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68249921f",
            "modified": 1666702455387,
            "created": 1666702455387,
            "url": "{{ base_url }}/api/v1.0/onpremise/endpoint/webUiAddress",
            "name": "Get WebUi address",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455387,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb655615904",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68249921f",
            "modified": 1666702455387,
            "created": 1666702455387,
            "url": "{{ base_url }}/api/v1.0/onpremise/endpoint/cdnAddress",
            "name": "Update root CDN address",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"address\": \"string\"\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455387,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb61c3ddbf6",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68249921f",
            "modified": 1666702455387,
            "created": 1666702455387,
            "url": "{{ base_url }}/api/v1.0/onpremise/endpoint/cdnAddress",
            "name": "Get root CDN address",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455387,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6ee3d7448",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68249921f",
            "modified": 1666702455386,
            "created": 1666702455386,
            "url": "{{ base_url }}/api/v1.0/onpremise/endpoint/webUiAddress",
            "name": "Update WebUi address",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"address\": \"string\"\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455386,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6c15e00ba",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb629be96f9",
            "modified": 1666702455394,
            "created": 1666702455394,
            "url": "{{ base_url }}/api/v1.0/onpremise/bootstrapManagement/newNodeId",
            "name": "Get new node id",
            "description": "",
            "method": "POST",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455394,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb629be96f9",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455405,
            "created": 1666702455405,
            "name": "Startup configuration",
            "description": "Startup configuration",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455405,
            "_type": "request_group"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6b0a1d505",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb629be96f9",
            "modified": 1666702455394,
            "created": 1666702455394,
            "url": "{{ base_url }}/api/v1.0/onpremise/bootstrapManagement/files/ag/configProperties",
            "name": "Get ActiveGate config properties",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455394,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6a58053c7",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb629be96f9",
            "modified": 1666702455393,
            "created": 1666702455393,
            "url": "{{ base_url }}/api/v1.0/onpremise/bootstrapManagement/files/ag/secureConfigProperties",
            "name": "Get ActiveGate secure config properties",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455393,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb66480e370",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb629be96f9",
            "modified": 1666702455393,
            "created": 1666702455393,
            "url": "{{ base_url }}/api/v1.0/onpremise/bootstrapManagement/files/installerMetadata",
            "name": "Get installer metadata",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455393,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb65bae6d86",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb629be96f9",
            "modified": 1666702455393,
            "created": 1666702455393,
            "url": "{{ base_url }}/api/v1.0/onpremise/bootstrapManagement/files/configProperties",
            "name": "Get config properties",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455393,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6bb5d74c0",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb629be96f9",
            "modified": 1666702455392,
            "created": 1666702455392,
            "url": "{{ base_url }}/api/v1.0/onpremise/bootstrapManagement/files/keyStore",
            "name": "Get key store",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455392,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb670e2f3c9",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb629be96f9",
            "modified": 1666702455392,
            "created": 1666702455392,
            "url": "{{ base_url }}/api/v1.0/onpremise/bootstrapManagement/files/runtimeProperties",
            "name": "Get runtime properties",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455392,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6cde58b90",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb629be96f9",
            "modified": 1666702455391,
            "created": 1666702455391,
            "url": "{{ base_url }}/api/v1.0/onpremise/bootstrapManagement/files/secureConfigProperties",
            "name": "Get secure config properties",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455391,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb614288a50",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6d75dc68b",
            "modified": 1666702455386,
            "created": 1666702455386,
            "url": "{{ base_url }}/api/v1.0/onpremise/cluster/configuration",
            "name": "Cluster nodes configuration",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455386,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6d75dc68b",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455404,
            "created": 1666702455404,
            "name": "Cluster",
            "description": "Cluster",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455404,
            "_type": "request_group"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6c8e300e7",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6d75dc68b",
            "modified": 1666702455385,
            "created": 1666702455385,
            "url": "{{ base_url }}/api/v1.0/onpremise/cluster/configuration",
            "name": "Configure cluster nodes responsibilities",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"clusterNodes\": [\n    {\n      \"id\": 0,\n      \"webUI\": true,\n      \"agent\": true,\n      \"datacenter\": \"string\",\n      \"kubernetesRole\": \"string\"\n    }\n  ]\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455385,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6635a1b48",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6d75dc68b",
            "modified": 1666702455385,
            "created": 1666702455385,
            "url": "{{ base_url }}/api/v1.0/onpremise/cluster/configuration/status/{{ requestedAt }}",
            "name": "Get cluster nodes configuration request status",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455385,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6316230f0",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6d75dc68b",
            "modified": 1666702455384,
            "created": 1666702455384,
            "url": "{{ base_url }}/api/v1.0/onpremise/cluster/configuration/status",
            "name": "Get cluster nodes configuration current status",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455384,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb602497cc4",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6d75dc68b",
            "modified": 1666702455384,
            "created": 1666702455384,
            "url": "{{ base_url }}/api/v1.0/onpremise/cluster",
            "name": "Get information about known servers",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455384,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb60c49a34d",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455384,
            "created": 1666702455384,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/datacenterTopology",
            "name": "Get cluster topology draft | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455384,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455404,
            "created": 1666702455404,
            "name": "Migration to multi-datacenter deployment",
            "description": "Migration to multi-datacenter deployment",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455404,
            "_type": "request_group"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb69f8fa7e7",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455383,
            "created": 1666702455383,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/datacenterTopology",
            "name": "Create cluster topology draft | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "POST",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455383,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb69c04ff5d",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455383,
            "created": 1666702455383,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/datacenterTopology",
            "name": "Delete cluster topology draft | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "DELETE",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455383,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb698a3547f",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455382,
            "created": 1666702455382,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/finish",
            "name": "Finish migration | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "POST",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455382,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb61701f3e7",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455382,
            "created": 1666702455382,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/clusterState",
            "name": "Get cluster state of migration from single to multi datacenter cluster and its sub steps | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455382,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6914f0ebe",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455381,
            "created": 1666702455381,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/cassandra/currentDc/{{ requestId }}",
            "name": "Get cassandra migration status in current datacenter | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455381,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb681ba9d9e",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455381,
            "created": 1666702455381,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/cassandra/newDc/{{ requestId }}",
            "name": "Get cassandra migration status in new datacenter | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455381,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6338ab98a",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455381,
            "created": 1666702455381,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/clusterState",
            "name": "Modify the overall cluster state of migration from single to multi datacenter cluster | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "PUT",
            "body": {},
            "parameters": [
                {
                    "name": "status",
                    "disabled": true,
                    "value": "string"
                },
                {
                    "name": "details",
                    "disabled": true,
                    "value": "string"
                }
            ],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455381,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6b6583b34",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455380,
            "created": 1666702455380,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/server/{{ requestId }}",
            "name": "Get server migration status | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455380,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb686e40e06",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455380,
            "created": 1666702455380,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/elasticsearch/{{ requestId }}",
            "name": "Get elasticsearch migration status | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455380,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6b8430485",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455379,
            "created": 1666702455379,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/inServerconfigState",
            "name": "Get state of in-server config migration (from single to multi datacenter cluster) | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455379,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6e08bbe09",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455378,
            "created": 1666702455378,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/nodekeeper/healthCheck",
            "name": "Get nodekeeper helathcheck | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455378,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6f89e81fd",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455377,
            "created": 1666702455377,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/clusterReplicationPreparation",
            "name": "Start procedure of cluster preparation for a replication | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "POST",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455377,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb645fdf4e3",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455377,
            "created": 1666702455377,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/clusterReplicationPreparation",
            "name": "Get progress status of cluster preparation for a replication | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455377,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb670f91c8a",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455376,
            "created": 1666702455376,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/clusterState/{{ subStep }}",
            "name": "Get sub step of migration from single to multi datacenter cluster | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455376,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb66e4f5c2a",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455376,
            "created": 1666702455376,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/clusterNodes/currentDc/{{ requestId }}",
            "name": "Get topology configuration status | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455376,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb62f1de1f9",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455376,
            "created": 1666702455376,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/clusterState/{{ subStep }}",
            "name": "Modify sub step of migration from single to multi datacenter cluster | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "PUT",
            "body": {},
            "parameters": [
                {
                    "name": "status",
                    "disabled": true,
                    "value": "string"
                },
                {
                    "name": "details",
                    "disabled": true,
                    "value": "string"
                }
            ],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455376,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb672ae5b71",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455375,
            "created": 1666702455375,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/lostDatacenterCleanUp",
            "name": "Clean up lost datacenter settings | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "POST",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455375,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb66c573f04",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455375,
            "created": 1666702455375,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/elasticsearch/indexMigrationStatus",
            "name": "Verify elasticsearch migration status | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455375,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb617100ba3",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455375,
            "created": 1666702455375,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/cassandra/rebuildStatus",
            "name": "Verify cassandra rebuild status | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455375,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6f1389394",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455374,
            "created": 1666702455374,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/cassandra/newDc",
            "name": "Start cassandra migration in new datacenter | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "POST",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455374,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6cfb5ece5",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455374,
            "created": 1666702455374,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/cassandra/currentDc",
            "name": "Start cassandra migration in current datacenter | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "POST",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455374,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6ee98c0a8",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455373,
            "created": 1666702455373,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/server",
            "name": "Start server migration in current datacenter | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "POST",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455373,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb67a6f7edc",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455373,
            "created": 1666702455373,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/clusterNodes/currentDc",
            "name": "Start cluster topology configuration - open firewall ports | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "POST",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455373,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb67a4057b5",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb68f84cefa",
            "modified": 1666702455373,
            "created": 1666702455373,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/migration/elasticsearch",
            "name": "Start elasticsearch migration | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "POST",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455373,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6dcca5501",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6cc0d03d5",
            "modified": 1666702455372,
            "created": 1666702455372,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/restore/elasticsearch/recover",
            "name": "Recover elasticsearch from a snapshot on one datacenter. | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "POST",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455372,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6cc0d03d5",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455403,
            "created": 1666702455403,
            "name": "Elasticsearch disaster recovery in multi-datacenter deployment",
            "description": "Elasticsearch disaster recovery in multi-datacenter deployment",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455403,
            "_type": "request_group"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb609a1f69c",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6cc0d03d5",
            "modified": 1666702455372,
            "created": 1666702455372,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/restore/elasticsearch/recover",
            "name": "Get status of disaster recovery. | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455372,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb65bf81c76",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6cc0d03d5",
            "modified": 1666702455371,
            "created": 1666702455371,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/restore/server/recovery/{{ requestId }}",
            "name": "Get status after server migration and start components in disaster recovery | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455371,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb612e49850",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6cc0d03d5",
            "modified": 1666702455371,
            "created": 1666702455371,
            "url": "{{ base_url }}/api/v1.0/onpremise/multiDc/restore/server/recovery",
            "name": "Migrate servers and start components after disaster recovery | maturity=EARLY_ADOPTER",
            "description": "",
            "method": "POST",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455371,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb63c39553d",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6ad187c46",
            "modified": 1666702455371,
            "created": 1666702455371,
            "url": "{{ base_url }}/api/v1.0/onpremise/elastic/upgradeStatus",
            "name": "Checks if it is safe to upgrade elasticsearch ",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [
                {
                    "name": "expectedElasticsearchNodes",
                    "disabled": true,
                    "value": "-1"
                }
            ],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455371,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6ad187c46",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455403,
            "created": 1666702455403,
            "name": "Elasticsearch Management API",
            "description": "Elasticsearch Management API",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455403,
            "_type": "request_group"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6f980d50b",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6ad187c46",
            "modified": 1666702455370,
            "created": 1666702455370,
            "url": "{{ base_url }}/api/v1.0/onpremise/elastic/ccr/autoFollowPattern",
            "name": "Deletes auto follow pattern for MultiDC environment",
            "description": "",
            "method": "DELETE",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455370,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb61ba5495b",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6ad187c46",
            "modified": 1666702455370,
            "created": 1666702455370,
            "url": "{{ base_url }}/api/v1.0/onpremise/elastic/ccr/autoFollowPattern",
            "name": "Creates auto follow pattern for MultiDC environment",
            "description": "",
            "method": "POST",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455370,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb67cdb40c4",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb69dfd349e",
            "modified": 1666702455360,
            "created": 1666702455360,
            "url": "{{ base_url }}/api/v1.0/onpremise/preferences",
            "name": "Get Dynatrace Managed specific properties",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455360,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb69dfd349e",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455402,
            "created": 1666702455402,
            "name": "Preferences",
            "description": "Preferences",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455402,
            "_type": "request_group"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6a4136002",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb69dfd349e",
            "modified": 1666702455359,
            "created": 1666702455359,
            "url": "{{ base_url }}/api/v1.0/onpremise/preferences",
            "name": "Update properties",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"certificateManagementEnabled\": true,\n  \"certificateManagementPossible\": true,\n  \"supportSendBilling\": true,\n  \"suppressNonBillingRelevantData\": true,\n  \"supportSendClusterHealth\": true,\n  \"supportSendEvents\": true,\n  \"supportAllowRemoteAccess\": true,\n  \"remoteAccessOnDemandOnly\": true,\n  \"communityCreateUser\": true,\n  \"communityExternalSearch\": true,\n  \"ruxitMonitorsRuxit\": true,\n  \"telemetrySharing\": true,\n  \"helpChatEnabled\": true,\n  \"readOnlyRemoteAccessAllowed\": true\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455359,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6c9eab2d2",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb64e7f4126",
            "modified": 1666702455370,
            "created": 1666702455370,
            "url": "{{ base_url }}/api/v1.0/onpremise/firewallManagement/addClusterNode",
            "name": "Add cluster node",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"id\": 0,\n  \"webUI\": true,\n  \"agent\": true,\n  \"datacenter\": \"string\",\n  \"kubernetesRole\": \"string\"\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455370,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb64e7f4126",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455402,
            "created": 1666702455402,
            "name": "Firewall configuration",
            "description": "Firewall configuration",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455402,
            "_type": "request_group"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb697ad1066",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb64e7f4126",
            "modified": 1666702455369,
            "created": 1666702455369,
            "url": "{{ base_url }}/api/v1.0/onpremise/firewallManagement/clusterNodes",
            "name": "Get cluster nodes",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455369,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6793ecdae",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb64e7f4126",
            "modified": 1666702455369,
            "created": 1666702455369,
            "url": "{{ base_url }}/api/v1.0/onpremise/firewallManagement/removeClusterNode",
            "name": "/firewallManagement/removeClusterNode",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455369,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb63e95fe91",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb64e7f4126",
            "modified": 1666702455369,
            "created": 1666702455369,
            "url": "{{ base_url }}/api/v1.0/onpremise/firewallManagement/removeClusterNode",
            "name": "Remove cluster node",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"ipAddress\": \"string\"\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455369,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6d5cdf2a2",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb64e7f4126",
            "modified": 1666702455368,
            "created": 1666702455368,
            "url": "{{ base_url }}/api/v1.0/onpremise/firewallManagement/removeClusterNode/{{ ip }}",
            "name": "/firewallManagement/removeClusterNode/{ip}",
            "description": "",
            "method": "DELETE",
            "body": {},
            "parameters": [
                {
                    "name": "scope",
                    "disabled": true,
                    "value": "string"
                },
                {
                    "name": "asyncCrossNodeCommunication",
                    "disabled": true,
                    "value": "true"
                }
            ],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455368,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb67f406d71",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "modified": 1666702455368,
            "created": 1666702455368,
            "url": "{{ base_url }}/api/v1.0/onpremise/nodeManagement/deadNodeCleaning",
            "name": "/nodeManagement/deadNodeCleaning",
            "description": "",
            "method": "DELETE",
            "body": {},
            "parameters": [
                {
                    "name": "ip",
                    "disabled": true,
                    "value": "string"
                },
                {
                    "name": "requestedOnNode",
                    "disabled": true,
                    "value": "0"
                },
                {
                    "name": "requestedByUser",
                    "disabled": true,
                    "value": "string"
                }
            ],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455368,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455402,
            "created": 1666702455402,
            "name": "Cluster node",
            "description": "Cluster node",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455402,
            "_type": "request_group"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb63a8b91ef",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "modified": 1666702455367,
            "created": 1666702455367,
            "url": "{{ base_url }}/api/v1.0/onpremise/nodeManagement/cassandraQuorumOverride",
            "name": "Get the cassandra read quorum override.",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455367,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb62afa3458",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "modified": 1666702455367,
            "created": 1666702455367,
            "url": "{{ base_url }}/api/v1.0/onpremise/nodeManagement/cassandraQuorumOverride/{{ quorum }}",
            "name": "Override cassandra read quorum at runtime only for this particular server instance",
            "description": "",
            "method": "PUT",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455367,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb62203b67f",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "modified": 1666702455367,
            "created": 1666702455367,
            "url": "{{ base_url }}/api/v1.0/onpremise/nodeManagement/finalizeJoining",
            "name": "/nodeManagement/finalizeJoining",
            "description": "",
            "method": "PUT",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"ip\": \"string\",\n  \"result\": \"string\",\n  \"details\": \"string\"\n}"
            },
            "parameters": [
                {
                    "name": "ip",
                    "disabled": true,
                    "value": "string"
                },
                {
                    "name": "status",
                    "disabled": true,
                    "value": "string"
                },
                {
                    "name": "forceUnlock",
                    "disabled": true,
                    "value": "true"
                }
            ],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455367,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6fd4f526f",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "modified": 1666702455366,
            "created": 1666702455366,
            "url": "{{ base_url }}/api/v1.0/onpremise/nodeManagement/joining/{{ requestId }}",
            "name": "/nodeManagement/joining/{requestId}",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455366,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb696f9b52d",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "modified": 1666702455366,
            "created": 1666702455366,
            "url": "{{ base_url }}/api/v1.0/onpremise/nodeManagement/join/check/{{ requestId }}",
            "name": "Verification if a node can be added to the cluster status",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455366,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6eb26f7ff",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "modified": 1666702455365,
            "created": 1666702455365,
            "url": "{{ base_url }}/api/v1.0/onpremise/nodeManagement/productVersion",
            "name": "Get product version",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455365,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6c02b992f",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "modified": 1666702455365,
            "created": 1666702455365,
            "url": "{{ base_url }}/api/v1.0/onpremise/nodeManagement/nodeRemovalStatus",
            "name": "Get node removal status",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455365,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6c704c209",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "modified": 1666702455364,
            "created": 1666702455364,
            "url": "{{ base_url }}/api/v1.0/onpremise/nodeManagement/join/check",
            "name": "Initialize verification if a node can be added to the cluster",
            "description": "",
            "method": "POST",
            "body": {},
            "parameters": [
                {
                    "name": "ip",
                    "disabled": true,
                    "value": "string"
                },
                {
                    "name": "timestamp",
                    "disabled": true,
                    "value": "0"
                },
                {
                    "name": "datacenter",
                    "disabled": true,
                    "value": "string"
                }
            ],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455364,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb69105a3fb",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "modified": 1666702455364,
            "created": 1666702455364,
            "url": "{{ base_url }}/api/v1.0/onpremise/nodeManagement/nodekeeperProductVersion",
            "name": "/nodeManagement/nodekeeperProductVersion",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455364,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb669053d44",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "modified": 1666702455364,
            "created": 1666702455364,
            "url": "{{ base_url }}/api/v1.0/onpremise/nodeManagement/nodeServerStatus",
            "name": "Get node's server status",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455364,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb677d43563",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "modified": 1666702455363,
            "created": 1666702455363,
            "url": "{{ base_url }}/api/v1.0/onpremise/nodeManagement/responsibilityOverride",
            "name": "Override which nodes can perform internal responsibilities",
            "description": "",
            "method": "PUT",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"responsibilityNodeIds\": [\n    0\n  ]\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455363,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb66ec97415",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "modified": 1666702455363,
            "created": 1666702455363,
            "url": "{{ base_url }}/api/v1.0/onpremise/nodeManagement/nodeRestart",
            "name": "Restart node",
            "description": "",
            "method": "POST",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455363,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb64fefa535",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "modified": 1666702455363,
            "created": 1666702455363,
            "url": "{{ base_url }}/api/v1.0/onpremise/nodeManagement/joining",
            "name": "/nodeManagement/joining",
            "description": "",
            "method": "POST",
            "body": {},
            "parameters": [
                {
                    "name": "ip",
                    "disabled": true,
                    "value": "string"
                },
                {
                    "name": "timestamp",
                    "disabled": true,
                    "value": "0"
                },
                {
                    "name": "datacenter",
                    "disabled": true,
                    "value": "string"
                }
            ],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455363,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6e467371b",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "modified": 1666702455362,
            "created": 1666702455362,
            "url": "{{ base_url }}/api/v1.0/onpremise/nodeManagement/installerStatus",
            "name": "/nodeManagement/installerStatus",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"status\": \"string\",\n  \"details\": \"string\",\n  \"lastFinishedStep\": \"string\"\n}"
            },
            "parameters": [
                {
                    "name": "ip",
                    "disabled": true,
                    "value": "string"
                }
            ],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455362,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6a46745bb",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "modified": 1666702455361,
            "created": 1666702455361,
            "url": "{{ base_url }}/api/v1.0/onpremise/nodeManagement/triggerRemoveNode",
            "name": "Remove node",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"nodeId\": 0,\n  \"ipAddress\": \"string\"\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455361,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb62a068f55",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "modified": 1666702455361,
            "created": 1666702455361,
            "url": "{{ base_url }}/api/v1.0/onpremise/nodeManagement/tryLockJoining",
            "name": "/nodeManagement/tryLockJoining",
            "description": "",
            "method": "PUT",
            "body": {},
            "parameters": [
                {
                    "name": "ip",
                    "disabled": true,
                    "value": "string"
                }
            ],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455361,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb69ae66964",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "modified": 1666702455360,
            "created": 1666702455360,
            "url": "{{ base_url }}/api/v1.0/onpremise/nodeManagement/unlockRemoval",
            "name": "/nodeManagement/unlockRemoval",
            "description": "",
            "method": "PUT",
            "body": {},
            "parameters": [
                {
                    "name": "id",
                    "disabled": true,
                    "value": "0"
                },
                {
                    "name": "ip",
                    "disabled": true,
                    "value": "string"
                },
                {
                    "name": "removalStopReason",
                    "disabled": true,
                    "value": "string"
                }
            ],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455360,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb681d84eb7",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63121b508",
            "modified": 1666702455360,
            "created": 1666702455360,
            "url": "{{ base_url }}/api/v1.0/onpremise/nodeManagement/tryLockRemoval",
            "name": "/nodeManagement/tryLockRemoval",
            "description": "",
            "method": "PUT",
            "body": {},
            "parameters": [
                {
                    "name": "id",
                    "disabled": true,
                    "value": "0"
                },
                {
                    "name": "ip",
                    "disabled": true,
                    "value": "string"
                },
                {
                    "name": "requestedOnNode",
                    "disabled": true,
                    "value": "0"
                },
                {
                    "name": "requestedByUser",
                    "disabled": true,
                    "value": "string"
                }
            ],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455360,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb680f7196f",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6f103e570",
            "modified": 1666702455359,
            "created": 1666702455359,
            "url": "{{ base_url }}/api/v1.0/onpremise/smtp",
            "name": "Update SMTP configuration",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"hostName\": \"string\",\n  \"port\": 0,\n  \"userName\": \"string\",\n  \"password\": \"string\",\n  \"isPasswordConfigured\": true,\n  \"connectionSecurity\": \"string\",\n  \"senderEmailAddress\": \"string\",\n  \"allowFallbackViaMissionControl\": true,\n  \"useSmtpServer\": true\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455359,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6f103e570",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455401,
            "created": 1666702455401,
            "name": "SMTP settings",
            "description": "SMTP settings",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455401,
            "_type": "request_group"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6504c2722",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6f103e570",
            "modified": 1666702455359,
            "created": 1666702455359,
            "url": "{{ base_url }}/api/v1.0/onpremise/smtp",
            "name": "Get SMTP configuration",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455359,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb604ae2a28",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6f103e570",
            "modified": 1666702455358,
            "created": 1666702455358,
            "url": "{{ base_url }}/api/v1.0/onpremise/smtp/sendTestMessage/{{ emailAddress }}",
            "name": "Send test email",
            "description": "",
            "method": "POST",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455358,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb626c638fa",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb65392e595",
            "modified": 1666702455358,
            "created": 1666702455358,
            "url": "{{ base_url }}/api/v1.0/onpremise/sslCertificate/{{ entityType }}/{{ entityId }}",
            "name": "SSL certificate details.",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455358,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb65392e595",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455401,
            "created": 1666702455401,
            "name": "SSL certificates",
            "description": "SSL certificates",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455401,
            "_type": "request_group"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb64e06b99f",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb65392e595",
            "modified": 1666702455357,
            "created": 1666702455357,
            "url": "{{ base_url }}/api/v1.0/onpremise/sslCertificate/store/{{ entityType }}/{{ entityId }}",
            "name": "Get certificate-storage status",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455357,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6061829e2",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb65392e595",
            "modified": 1666702455357,
            "created": 1666702455357,
            "url": "{{ base_url }}/api/v1.0/onpremise/sslCertificate/store/{{ entityType }}/{{ entityId }}",
            "name": "Store SSL certificate status",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n  \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n  \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455357,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6e397d829",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63d9dc8c6",
            "modified": 1666702455357,
            "created": 1666702455357,
            "url": "{{ base_url }}/api/v1.0/onpremise/sso/saml/sp/cert",
            "name": "Get SAML SP X.509 certificate details",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455357,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63d9dc8c6",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455401,
            "created": 1666702455401,
            "name": "SSO configuration",
            "description": "SSO configuration",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455401,
            "_type": "request_group"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb64117ff14",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb63d9dc8c6",
            "modified": 1666702455356,
            "created": 1666702455356,
            "url": "{{ base_url }}/api/v1.0/onpremise/sso/saml/sp/cert",
            "name": "Update SAML SP X.509 certificate",
            "description": "",
            "method": "PUT",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n  \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\"\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455356,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6aa6ce394",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb65aba9c98",
            "modified": 1666702455356,
            "created": 1666702455356,
            "url": "{{ base_url }}/api/v1.0/onpremise/supportArchive/{{ id }}",
            "name": "Get support upgrade file",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455356,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb65aba9c98",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455400,
            "created": 1666702455400,
            "name": "Support Archives",
            "description": "Support Archives",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455400,
            "_type": "request_group"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb692fb1d4b",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb65aba9c98",
            "modified": 1666702455356,
            "created": 1666702455356,
            "url": "{{ base_url }}/api/v1.0/onpremise/supportArchive/{{ id }}",
            "name": "Cancel support upgrade generation",
            "description": "",
            "method": "PUT",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455356,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6c3dd3ab2",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb65aba9c98",
            "modified": 1666702455355,
            "created": 1666702455355,
            "url": "{{ base_url }}/api/v1.0/onpremise/supportArchive/{{ id }}",
            "name": "Delete existing support archive",
            "description": "",
            "method": "DELETE",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455355,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb66472df4d",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb65aba9c98",
            "modified": 1666702455355,
            "created": 1666702455355,
            "url": "{{ base_url }}/api/v1.0/onpremise/supportArchive/{{ id }}/report",
            "name": "Get support upgrade generation report",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455355,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb65b16d92b",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb65aba9c98",
            "modified": 1666702455355,
            "created": 1666702455355,
            "url": "{{ base_url }}/api/v1.0/onpremise/supportArchive/{{ id }}/status",
            "name": "Get support upgrade generation status",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455355,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6f0e7989b",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb65aba9c98",
            "modified": 1666702455354,
            "created": 1666702455354,
            "url": "{{ base_url }}/api/v1.0/onpremise/supportArchive",
            "name": "Trigger support upgrade generation",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"numberOfDays\": 0,\n  \"includeServerData\": true,\n  \"includeActiveGateData\": true,\n  \"includeLogs\": true,\n  \"includeDebugLogs\": true,\n  \"includeAgentRegistryLogs\": true,\n  \"includeLauncherLogs\": true,\n  \"includeMonitoringConfigAuditLogs\": true,\n  \"includeOtherAuditLogs\": true\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455354,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6f5fd9ef9",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6c76d1807",
            "modified": 1666702455354,
            "created": 1666702455354,
            "url": "{{ base_url }}/api/v1.0/onpremise/upgradeManagement/installationFiles/{{ type }}/{{ version }}",
            "name": "Trigger removal of installation package",
            "description": "",
            "method": "DELETE",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455354,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6c76d1807",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455399,
            "created": 1666702455399,
            "name": "Updates",
            "description": "Updates",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455399,
            "_type": "request_group"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb678ba5194",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6c76d1807",
            "modified": 1666702455354,
            "created": 1666702455354,
            "url": "{{ base_url }}/api/v1.0/onpremise/upgradeManagement/installationFiles/{{ type }}/{{ version }}",
            "name": "Modify update package state. Particular package might be excluded from download or re-downloaded.",
            "description": "",
            "method": "PUT",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"excludedFromDownload\": true\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455354,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb69bf22840",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6c76d1807",
            "modified": 1666702455353,
            "created": 1666702455353,
            "url": "{{ base_url }}/api/v1.0/onpremise/upgradeManagement/triggerUpgrade",
            "name": "Trigger manual cluster upgrade",
            "description": "",
            "method": "POST",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455353,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb64df095a9",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6c76d1807",
            "modified": 1666702455353,
            "created": 1666702455353,
            "url": "{{ base_url }}/api/v1.0/onpremise/upgradeManagement/installationFiles",
            "name": "Get list of installation files and their cluster-wide availability information",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455353,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb601a78678",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6c76d1807",
            "modified": 1666702455353,
            "created": 1666702455353,
            "url": "{{ base_url }}/api/v1.0/onpremise/upgradeManagement/clusterUpgradeStartupState",
            "name": "Get system precondition check state for the cluster",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455353,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6a1819288",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6a91a2683",
            "modified": 1666702455347,
            "created": 1666702455347,
            "url": "{{ base_url }}/api/v1.0/onpremise/userRepository/authenticationMode",
            "name": "Get authentication mode",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455347,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6a91a2683",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455398,
            "created": 1666702455398,
            "name": "User repository configuration",
            "description": "User repository configuration",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455398,
            "_type": "request_group"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6fe3fdecd",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6a91a2683",
            "modified": 1666702455346,
            "created": 1666702455346,
            "url": "{{ base_url }}/api/v1.0/onpremise/userRepository/authenticationMode",
            "name": "Update authentication mode",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"authenticationProvider\": \"string\",\n  \"authorizationProvider\": \"string\"\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455346,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb65cee6d15",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6a91a2683",
            "modified": 1666702455345,
            "created": 1666702455345,
            "url": "{{ base_url }}/api/v1.0/onpremise/userRepository/ldap/connectionConfiguration",
            "name": "Get LDAP configuration",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455345,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb602b4c688",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6a91a2683",
            "modified": 1666702455345,
            "created": 1666702455345,
            "url": "{{ base_url }}/api/v1.0/onpremise/userRepository/ldap/connectionConfiguration",
            "name": "Update LDAP connection",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"shouldUseSecureConnection\": true,\n  \"hostName\": \"string\",\n  \"port\": 0,\n  \"bindDn\": \"string\",\n  \"bindPassword\": \"string\",\n  \"bindPasswordSet\": true,\n  \"referralHopLimit\": 0\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455345,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6f9d8a6fa",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6a91a2683",
            "modified": 1666702455344,
            "created": 1666702455344,
            "url": "{{ base_url }}/api/v1.0/onpremise/userRepository/ldap/queryGroups",
            "name": "Get LDAP group configuration",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455344,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6b690373f",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6a91a2683",
            "modified": 1666702455344,
            "created": 1666702455344,
            "url": "{{ base_url }}/api/v1.0/onpremise/userRepository/ldap/queryUsers",
            "name": "Get LDAP users query configuration",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455344,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb67c78a8d5",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6a91a2683",
            "modified": 1666702455344,
            "created": 1666702455344,
            "url": "{{ base_url }}/api/v1.0/onpremise/userRepository/ldap/queryGroups",
            "name": "Update LDAP groups query configuration",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"groupsDn\": \"string\",\n  \"groupsFilter\": \"string\",\n  \"groupsIdAttribute\": \"string\",\n  \"groupsDisplayNameAttribute\": \"string\",\n  \"groupsMemberAttribute\": \"string\"\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455344,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6f263c148",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb6a91a2683",
            "modified": 1666702455343,
            "created": 1666702455343,
            "url": "{{ base_url }}/api/v1.0/onpremise/userRepository/ldap/queryUsers",
            "name": "Update LDAP users query configuration",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"usersBaseDn\": \"string\",\n  \"usersAccountNameAttribute\": \"string\",\n  \"usersFirstNameAttribute\": \"string\",\n  \"usersLastNameAttribute\": \"string\",\n  \"usersEmailAttribute\": \"string\",\n  \"usersMembershipAttribute\": \"string\",\n  \"usersFilter\": \"string\"\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455343,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6dfe076dc",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb657f2b181",
            "modified": 1666702455349,
            "created": 1666702455349,
            "url": "{{ base_url }}/api/v1.0/onpremise/users",
            "name": "Get users",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455349,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb657f2b181",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455398,
            "created": 1666702455398,
            "name": "Users",
            "description": "Users",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455398,
            "_type": "request_group"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6fe3d55d0",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb657f2b181",
            "modified": 1666702455348,
            "created": 1666702455348,
            "url": "{{ base_url }}/api/v1.0/onpremise/users",
            "name": "Create user",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"id\": \"string\",\n  \"email\": \"string\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"passwordClearText\": \"string\",\n  \"groups\": [\n    \"string\"\n  ]\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455348,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6ecd97c12",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb657f2b181",
            "modified": 1666702455348,
            "created": 1666702455348,
            "url": "{{ base_url }}/api/v1.0/onpremise/users/bulk",
            "name": "Create users",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "[\n  {\n    \"id\": \"string\",\n    \"email\": \"string\",\n    \"firstName\": \"string\",\n    \"lastName\": \"string\",\n    \"passwordClearText\": \"string\",\n    \"groups\": [\n      \"string\"\n    ]\n  }\n]"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455348,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb66d74493f",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb657f2b181",
            "modified": 1666702455348,
            "created": 1666702455348,
            "url": "{{ base_url }}/api/v1.0/onpremise/users",
            "name": "Update user",
            "description": "",
            "method": "PUT",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"id\": \"string\",\n  \"email\": \"string\",\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"passwordClearText\": \"string\",\n  \"groups\": [\n    \"string\"\n  ]\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455348,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6abbd3e69",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb657f2b181",
            "modified": 1666702455347,
            "created": 1666702455347,
            "url": "{{ base_url }}/api/v1.0/onpremise/users/{{ id }}",
            "name": "Get user",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455347,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb66fd09dcd",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb657f2b181",
            "modified": 1666702455347,
            "created": 1666702455347,
            "url": "{{ base_url }}/api/v1.0/onpremise/users/{{ id }}",
            "name": "Delete user",
            "description": "",
            "method": "DELETE",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455347,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6f4836aff",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb64add9526",
            "modified": 1666702455352,
            "created": 1666702455352,
            "url": "{{ base_url }}/api/v1.0/onpremise/groups",
            "name": "Get groups",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455352,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb64add9526",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455398,
            "created": 1666702455398,
            "name": "User groups",
            "description": "User groups",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455398,
            "_type": "request_group"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6f1bf61a8",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb64add9526",
            "modified": 1666702455352,
            "created": 1666702455352,
            "url": "{{ base_url }}/api/v1.0/onpremise/groups",
            "name": "Create group",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"isClusterAdminGroup\": true,\n  \"isAccessAccount\": true,\n  \"isManageAccount\": true,\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"ldapGroupNames\": [\n    \"string\"\n  ],\n  \"ssoGroupNames\": [\n    \"string\"\n  ],\n  \"accessRight\": {}\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455352,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6976b1075",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb64add9526",
            "modified": 1666702455352,
            "created": 1666702455352,
            "url": "{{ base_url }}/api/v1.0/onpremise/groups",
            "name": "Update group",
            "description": "",
            "method": "PUT",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"isClusterAdminGroup\": true,\n  \"isAccessAccount\": true,\n  \"isManageAccount\": true,\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"ldapGroupNames\": [\n    \"string\"\n  ],\n  \"ssoGroupNames\": [\n    \"string\"\n  ],\n  \"accessRight\": {}\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455352,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb662491445",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb64add9526",
            "modified": 1666702455351,
            "created": 1666702455351,
            "url": "{{ base_url }}/api/v1.0/onpremise/groups/{{ groupId }}",
            "name": "Get group",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455351,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb65ff9fe80",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb64add9526",
            "modified": 1666702455351,
            "created": 1666702455351,
            "url": "{{ base_url }}/api/v1.0/onpremise/groups/bulk",
            "name": "Create groups",
            "description": "",
            "method": "POST",
            "body": {
                "mimeType": "application/json",
                "text": "[\n  {\n    \"isClusterAdminGroup\": true,\n    \"isAccessAccount\": true,\n    \"isManageAccount\": true,\n    \"id\": \"string\",\n    \"name\": \"string\",\n    \"ldapGroupNames\": [\n      \"string\"\n    ],\n    \"ssoGroupNames\": [\n      \"string\"\n    ],\n    \"accessRight\": {}\n  }\n]"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455351,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6d35e36b8",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb64add9526",
            "modified": 1666702455350,
            "created": 1666702455350,
            "url": "{{ base_url }}/api/v1.0/onpremise/groups/managementZones",
            "name": "Get management zone permissions for all groups",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455350,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6aef4c92c",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb64add9526",
            "modified": 1666702455350,
            "created": 1666702455350,
            "url": "{{ base_url }}/api/v1.0/onpremise/groups/managementZones",
            "name": "Update management zone permissions for a single group",
            "description": "",
            "method": "PUT",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"groupId\": \"string\",\n  \"mzPermissionsPerEnvironment\": [\n    {\n      \"environmentUuid\": \"string\",\n      \"mzPermissions\": [\n        {\n          \"mzId\": \"string\",\n          \"permissions\": [\n            \"string\"\n          ]\n        }\n      ]\n    }\n  ]\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455350,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6aeb40be0",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb64add9526",
            "modified": 1666702455350,
            "created": 1666702455350,
            "url": "{{ base_url }}/api/v1.0/onpremise/groups/{{ groupId }}",
            "name": "Delete group",
            "description": "",
            "method": "DELETE",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455350,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb657066c4c",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb64add9526",
            "modified": 1666702455349,
            "created": 1666702455349,
            "url": "{{ base_url }}/api/v1.0/onpremise/groups/managementZones/{{ groupId }}",
            "name": "Get management zone permissions for a given group",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455349,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb63aff9c5e",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb65c4a176c",
            "modified": 1666702455339,
            "created": 1666702455339,
            "url": "{{ base_url }}/api/v1.0/onpremise/passwordPolicy",
            "name": "Get default's realm password policy configuration",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455339,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb65c4a176c",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455397,
            "created": 1666702455397,
            "name": "Password policy",
            "description": "Password policy",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455397,
            "_type": "request_group"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6f717f1ea",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb65c4a176c",
            "modified": 1666702455338,
            "created": 1666702455338,
            "url": "{{ base_url }}/api/v1.0/onpremise/passwordPolicy",
            "name": "Update password policy configuration",
            "description": "",
            "method": "PUT",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"minPasswordLength\": 0,\n  \"minNumberOfUppercaseChars\": 0,\n  \"minNumberOfLowercaseChars\": 0,\n  \"minNumberOfDigits\": 0,\n  \"minNumberOfNonAlphanumericChars\": 0\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455338,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb66d0917ed",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb612989de7",
            "modified": 1666702455343,
            "created": 1666702455343,
            "url": "{{ base_url }}/api/v1.0/onpremise/proxy/configurations/{{ dc }}",
            "name": "Get Data Center proxy configuration (Multi Data Center deployment)",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455343,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb612989de7",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455397,
            "created": 1666702455397,
            "name": "Internet proxy",
            "description": "Internet proxy",
            "environment": {},
            "environmentPropertyOrder": null,
            "metaSortKey": -1666702455397,
            "_type": "request_group"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6fad83bcb",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb612989de7",
            "modified": 1666702455342,
            "created": 1666702455342,
            "url": "{{ base_url }}/api/v1.0/onpremise/proxy/configuration",
            "name": "Get cluster proxy configuration",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455342,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6ef100e39",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb612989de7",
            "modified": 1666702455342,
            "created": 1666702455342,
            "url": "{{ base_url }}/api/v1.0/onpremise/proxy/configurations/{{ dc }}",
            "name": "Remove Data Center proxy configuration (Multi Data Center deployment)",
            "description": "",
            "method": "DELETE",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455342,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6c6141ade",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb612989de7",
            "modified": 1666702455342,
            "created": 1666702455342,
            "url": "{{ base_url }}/api/v1.0/onpremise/proxy/configurations/{{ dc }}",
            "name": "Set/update Data Center proxy configuration (Multi Data Center deployment)",
            "description": "",
            "method": "PUT",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"scheme\": \"string\",\n  \"server\": \"string\",\n  \"port\": 0,\n  \"user\": \"string\",\n  \"password\": \"string\",\n  \"nonProxyHosts\": [\n    \"string\"\n  ]\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455342,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6805b857c",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb612989de7",
            "modified": 1666702455341,
            "created": 1666702455341,
            "url": "{{ base_url }}/api/v1.0/onpremise/proxy/configuration",
            "name": "Remove cluster proxy configuration",
            "description": "",
            "method": "DELETE",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455341,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6230b3a50",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb612989de7",
            "modified": 1666702455341,
            "created": 1666702455341,
            "url": "{{ base_url }}/api/v1.0/onpremise/proxy/configuration",
            "name": "Set/update cluster proxy configuration",
            "description": "",
            "method": "PUT",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"scheme\": \"string\",\n  \"server\": \"string\",\n  \"port\": 0,\n  \"user\": \"string\",\n  \"password\": \"string\",\n  \"nonProxyHosts\": [\n    \"string\"\n  ]\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455341,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb6fa109d70",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb612989de7",
            "modified": 1666702455340,
            "created": 1666702455340,
            "url": "{{ base_url }}/api/v1.0/onpremise/proxy/test/{{ dc }}",
            "name": "Test Internet connection from specific Data Center using given proxy configuration (Multi Data Center deployment)",
            "description": "",
            "method": "PUT",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"scheme\": \"string\",\n  \"server\": \"string\",\n  \"port\": 0,\n  \"user\": \"string\",\n  \"password\": \"string\",\n  \"nonProxyHosts\": [\n    \"string\"\n  ]\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455340,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb67a826f2d",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb612989de7",
            "modified": 1666702455340,
            "created": 1666702455340,
            "url": "{{ base_url }}/api/v1.0/onpremise/proxy/test",
            "name": "Test Internet connection using given proxy configuration",
            "description": "",
            "method": "PUT",
            "body": {
                "mimeType": "application/json",
                "text": "{\n  \"scheme\": \"string\",\n  \"server\": \"string\",\n  \"port\": 0,\n  \"user\": \"string\",\n  \"password\": \"string\",\n  \"nonProxyHosts\": [\n    \"string\"\n  ]\n}"
            },
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                },
                {
                    "name": "Content-Type",
                    "value": "application/json"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455340,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "req_wrk_f76eeb970b9a46cbb4175665303dbdb61c84f29d",
            "parentId": "fld_wrk_f76eeb970b9a46cbb4175665303dbdb612989de7",
            "modified": 1666702455340,
            "created": 1666702455340,
            "url": "{{ base_url }}/api/v1.0/onpremise/proxy/configurations",
            "name": "Get proxy configurations for all Data Centers (Multi Data Center deployment)",
            "description": "",
            "method": "GET",
            "body": {},
            "parameters": [],
            "headers": [
                {
                    "name": "Authorization",
                    "disabled": false,
                    "value": "{{ authorization }}"
                }
            ],
            "authentication": {},
            "metaSortKey": -1666702455340,
            "isPrivate": false,
            "settingStoreCookies": true,
            "settingSendCookies": true,
            "settingDisableRenderRequestBody": false,
            "settingEncodeUrl": true,
            "settingRebuildPath": true,
            "settingFollowRedirects": "global",
            "_type": "request"
        },
        {
            "_id": "env_f731864e342c3b0f25fefa0bd8534f7aa13d7591",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702455407,
            "created": 1666702455406,
            "name": "Base environment",
            "data": {
                "base_url": "{{ scheme }}://{{ host }}"
            },
            "dataPropertyOrder": null,
            "color": null,
            "isPrivate": false,
            "metaSortKey": 1666702455406,
            "_type": "environment"
        },
        {
            "_id": "jar_f731864e342c3b0f25fefa0bd8534f7aa13d7591",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702519396,
            "created": 1666702519396,
            "name": "Default Jar",
            "cookies": [],
            "_type": "cookie_jar"
        },
        {
            "_id": "spc_3ad877c47c7e442aa0702afe001af866",
            "parentId": "wrk_f76eeb970b9a46cbb4175665303dbdb6",
            "modified": 1666702457310,
            "created": 1666702457301,
            "fileName": "Dynatrace Cluster API 1.0",
            "contents": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"Dynatrace Cluster API\",\n    \"description\": \"Dynatrace Managed exposes cluster management functionality via REST endpoints. This interactive documentation also acts as a REST client you can use to interact with Dynatrace Managed clusters. \\n\\nTo authorize, use the API Token generated in [Settings - API Tokens page](/cmc#cm/apiToken). The HTTP status code of the response shows the result of your request. The expected response code for a successful request is documented individually per REST endpoint. Additionally the following error response codes can occur in our REST interface:\\n\\n* 400 - Bad Request: Some request parameters are not correct. See response body for details.\\n* 401 - Unauthorized: A valid authorization header is required but is missing.\\n* 403 - Forbidden: Execution of request is not allowed, e.g. api-token is invalid.\\n* 404 - Not Found: Endpoint does not exist or some entities could not be found, e.g. User account.\\n* 500 - Internal Server Error: See response body for details.\\n* 556 - Upgrade in progress: Operation couldn't be performed during the upgrade.\\n\",\n    \"version\": \"1.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://example.com/api/v1.0/onpremise\",\n      \"variables\": {}\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Backup configuration\",\n      \"description\": \"Backup configuration\"\n    },\n    {\n      \"name\": \"Startup configuration\",\n      \"description\": \"Startup configuration\"\n    },\n    {\n      \"name\": \"Public endpoints\",\n      \"description\": \"Public endpoints\"\n    },\n    {\n      \"name\": \"Cluster\",\n      \"description\": \"Cluster\"\n    },\n    {\n      \"name\": \"Migration to multi-datacenter deployment\",\n      \"description\": \"Migration to multi-datacenter deployment\"\n    },\n    {\n      \"name\": \"Elasticsearch disaster recovery in multi-datacenter deployment\",\n      \"description\": \"Elasticsearch disaster recovery in multi-datacenter deployment\"\n    },\n    {\n      \"name\": \"Elasticsearch Management API\",\n      \"description\": \"Elasticsearch Management API\"\n    },\n    {\n      \"name\": \"Firewall configuration\",\n      \"description\": \"Firewall configuration\"\n    },\n    {\n      \"name\": \"Cluster node\",\n      \"description\": \"Cluster node\"\n    },\n    {\n      \"name\": \"Preferences\",\n      \"description\": \"Preferences\"\n    },\n    {\n      \"name\": \"SMTP settings\",\n      \"description\": \"SMTP settings\"\n    },\n    {\n      \"name\": \"SSL certificates\",\n      \"description\": \"SSL certificates\"\n    },\n    {\n      \"name\": \"SSO configuration\",\n      \"description\": \"SSO configuration\"\n    },\n    {\n      \"name\": \"Support Archives\",\n      \"description\": \"Support Archives\"\n    },\n    {\n      \"name\": \"Updates\",\n      \"description\": \"Updates\"\n    },\n    {\n      \"name\": \"User groups\",\n      \"description\": \"User groups\"\n    },\n    {\n      \"name\": \"Users\",\n      \"description\": \"Users\"\n    },\n    {\n      \"name\": \"User repository configuration\",\n      \"description\": \"User repository configuration\"\n    },\n    {\n      \"name\": \"Internet proxy\",\n      \"description\": \"Internet proxy\"\n    },\n    {\n      \"name\": \"Password policy\",\n      \"description\": \"Password policy\"\n    }\n  ],\n  \"paths\": {\n    \"/backup/config\": {\n      \"get\": {\n        \"tags\": [\n          \"Backup configuration\"\n        ],\n        \"summary\": \"Return backup configuration overview\",\n        \"operationId\": \"getBackupConfig\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/backupConfigDto\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      },\n      \"put\": {\n        \"tags\": [\n          \"Backup configuration\"\n        ],\n        \"summary\": \"Change backup configuration\",\n        \"operationId\": \"changeBackupConfig\",\n        \"requestBody\": {\n          \"description\": \"The JSON body of the request, containing new state of backup configuration.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/backupConfigDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          },\n          \"512\": {\n            \"description\": \"Configuration change failed.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/backup/clusterCheckDir\": {\n      \"get\": {\n        \"tags\": [\n          \"Backup configuration\"\n        ],\n        \"summary\": \"Check if given directory is valid for backup in the cluster\",\n        \"operationId\": \"checkBackupDirForCluster\",\n        \"parameters\": [\n          {\n            \"name\": \"dir\",\n            \"in\": \"query\",\n            \"description\": \"Backup store directory path parameter. Missing or empty values will return a 'Bad Request'\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"datacenter\",\n            \"in\": \"query\",\n            \"description\": \"Datacenter where backup should be executed. Should be omitted for Single Datacenter Cluster\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/StorageTestImpl\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"No directory information received for validation\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/backup/config/status\": {\n      \"get\": {\n        \"tags\": [\n          \"Backup configuration\"\n        ],\n        \"summary\": \"Check status of change backup configuration\",\n        \"operationId\": \"getStatusOfChangeBackupConfig\",\n        \"parameters\": [\n          {\n            \"name\": \"requestId\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          },\n          \"207\": {\n            \"description\": \"Request accepted. There will be an id in the response body to check status through the config/status endpoint.\"\n          },\n          \"404\": {\n            \"description\": \"There is no response for your request id, it might have been already removed from cache if request was made several hours ago. Please make sure that request id is correct and not empty.\"\n          },\n          \"512\": {\n            \"description\": \"Configuration change failed\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/bootstrapManagement/newNodeId\": {\n      \"post\": {\n        \"tags\": [\n          \"Startup configuration\"\n        ],\n        \"summary\": \"Get new node id\",\n        \"operationId\": \"generateNewNodeId\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FileDto\"\n                }\n              }\n            }\n          },\n          \"510\": {\n            \"description\": \"Failed to generate new node Id\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/bootstrapManagement/files/ag/configProperties\": {\n      \"get\": {\n        \"tags\": [\n          \"Startup configuration\"\n        ],\n        \"summary\": \"Get ActiveGate config properties\",\n        \"operationId\": \"getActiveGateConfigProperties\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FileDto\"\n                }\n              }\n            }\n          },\n          \"510\": {\n            \"description\": \"No 'config.properties' file available\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/bootstrapManagement/files/ag/secureConfigProperties\": {\n      \"get\": {\n        \"tags\": [\n          \"Startup configuration\"\n        ],\n        \"summary\": \"Get ActiveGate secure config properties\",\n        \"operationId\": \"getActiveGateSecureConfigProperties\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FileDto\"\n                }\n              }\n            }\n          },\n          \"510\": {\n            \"description\": \"No 'secure.config.properties' file available\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/bootstrapManagement/files/configProperties\": {\n      \"get\": {\n        \"tags\": [\n          \"Startup configuration\"\n        ],\n        \"summary\": \"Get config properties\",\n        \"operationId\": \"getConfigProperties\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FileDto\"\n                }\n              }\n            }\n          },\n          \"510\": {\n            \"description\": \"No 'config.properties' file available\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/bootstrapManagement/files/installerMetadata\": {\n      \"get\": {\n        \"tags\": [\n          \"Startup configuration\"\n        ],\n        \"summary\": \"Get installer metadata\",\n        \"operationId\": \"getInstallerMetadata\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InstallerMetadata\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/bootstrapManagement/files/keyStore\": {\n      \"get\": {\n        \"tags\": [\n          \"Startup configuration\"\n        ],\n        \"summary\": \"Get key store\",\n        \"operationId\": \"getKeyStore\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FileDto\"\n                }\n              }\n            }\n          },\n          \"510\": {\n            \"description\": \"No 'key store' file available\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/bootstrapManagement/files/runtimeProperties\": {\n      \"get\": {\n        \"tags\": [\n          \"Startup configuration\"\n        ],\n        \"summary\": \"Get runtime properties\",\n        \"operationId\": \"getRuntimeProperties\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FileDto\"\n                }\n              }\n            }\n          },\n          \"510\": {\n            \"description\": \"No 'runtime.properties' file available\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/bootstrapManagement/files/secureConfigProperties\": {\n      \"get\": {\n        \"tags\": [\n          \"Startup configuration\"\n        ],\n        \"summary\": \"Get secure config properties\",\n        \"operationId\": \"getSecureConfigProperties\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/FileDto\"\n                }\n              }\n            }\n          },\n          \"510\": {\n            \"description\": \"No 'secure.config.properties' file available\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/endpoint/additionalWebUiAddresses\": {\n      \"get\": {\n        \"tags\": [\n          \"Public endpoints\"\n        ],\n        \"summary\": \"Get additional WebUi addresses\",\n        \"operationId\": \"getAdditionalWebUiAddresses\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AdditionalAddresses\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"Public endpoints\"\n        ],\n        \"summary\": \"Update additional WebUi addresses\",\n        \"operationId\": \"updateAdditionalWebUiAddresses\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AdditionalAddresses\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AdditionalAddresses\"\n                }\n              }\n            }\n          },\n          \"510\": {\n            \"description\": \"Operation failed\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/endpoint/beaconForwarderAddress\": {\n      \"get\": {\n        \"tags\": [\n          \"Public endpoints\"\n        ],\n        \"summary\": \"Get beacon forwarder address\",\n        \"operationId\": \"getBeaconForwarderAddress\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AddressWrapper\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"Public endpoints\"\n        ],\n        \"summary\": \"Update beacon forwarder address\",\n        \"operationId\": \"updateBeaconForwarderAddress\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddressWrapper\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AddressWrapper\"\n                }\n              }\n            }\n          },\n          \"510\": {\n            \"description\": \"Operation failed\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/endpoint/publicIp/agents/{nodeId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Public endpoints\"\n        ],\n        \"summary\": \"Get node IP for OneAgents\",\n        \"operationId\": \"getNodeIpForAgents\",\n        \"parameters\": [\n          {\n            \"name\": \"nodeId\",\n            \"in\": \"path\",\n            \"description\": \"Node ID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AddressWrapperForAgentsImpl\"\n                }\n              }\n            }\n          },\n          \"544\": {\n            \"description\": \"Timeout\"\n          },\n          \"550\": {\n            \"description\": \"Invalid address\"\n          },\n          \"552\": {\n            \"description\": \"Collector not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"put\": {\n        \"tags\": [\n          \"Public endpoints\"\n        ],\n        \"summary\": \"Store node IP for OneAgents\",\n        \"operationId\": \"storeNodeIpForAgents\",\n        \"parameters\": [\n          {\n            \"name\": \"nodeId\",\n            \"in\": \"path\",\n            \"description\": \"Node ID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"String\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          },\n          \"510\": {\n            \"description\": \"Operation failed\"\n          },\n          \"540\": {\n            \"description\": \"Storing configuration failed\"\n          },\n          \"550\": {\n            \"description\": \"Invalid IP address\"\n          },\n          \"552\": {\n            \"description\": \"Collector not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/endpoint/publicIp/domain/{nodeId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Public endpoints\"\n        ],\n        \"summary\": \"Get node IP for domain\",\n        \"operationId\": \"getNodeIpForDomain\",\n        \"parameters\": [\n          {\n            \"name\": \"nodeId\",\n            \"in\": \"path\",\n            \"description\": \"Node ID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AddressWrapper\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Node not found by id\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"put\": {\n        \"tags\": [\n          \"Public endpoints\"\n        ],\n        \"summary\": \"Store node IP for domain\",\n        \"operationId\": \"storeNodeIpForDomain\",\n        \"parameters\": [\n          {\n            \"name\": \"nodeId\",\n            \"in\": \"path\",\n            \"description\": \"Node ID\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"String\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AddressWrapper\"\n                }\n              }\n            }\n          },\n          \"510\": {\n            \"description\": \"Operation failed\"\n          },\n          \"550\": {\n            \"description\": \"Invalid IP address\"\n          },\n          \"551\": {\n            \"description\": \"Storing IP failed\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/endpoint/cdnAddress\": {\n      \"get\": {\n        \"tags\": [\n          \"Public endpoints\"\n        ],\n        \"summary\": \"Get root CDN address\",\n        \"operationId\": \"getRootCDNAddress\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AddressWrapper\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"Public endpoints\"\n        ],\n        \"summary\": \"Update root CDN address\",\n        \"operationId\": \"updateRootCDNAddress\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddressWrapper\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AddressWrapper\"\n                }\n              }\n            }\n          },\n          \"510\": {\n            \"description\": \"Operation failed\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/endpoint/webUiAddress\": {\n      \"get\": {\n        \"tags\": [\n          \"Public endpoints\"\n        ],\n        \"summary\": \"Get WebUi address\",\n        \"operationId\": \"getWebUiAddress\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AddressWrapper\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"Public endpoints\"\n        ],\n        \"summary\": \"Update WebUi address\",\n        \"operationId\": \"updateWebUiAddress\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AddressWrapper\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AddressWrapper\"\n                }\n              }\n            }\n          },\n          \"510\": {\n            \"description\": \"Operation failed\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/cluster/configuration\": {\n      \"get\": {\n        \"tags\": [\n          \"Cluster\"\n        ],\n        \"summary\": \"Cluster nodes configuration\",\n        \"operationId\": \"nodesConfiguration\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`ControlManagement` (ControlManagement)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"Cluster\"\n        ],\n        \"summary\": \"Configure cluster nodes responsibilities\",\n        \"operationId\": \"configureNodes\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ClusterNodesConfigDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`ControlManagement` (ControlManagement)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/cluster/configuration/status/{requestedAt}\": {\n      \"get\": {\n        \"tags\": [\n          \"Cluster\"\n        ],\n        \"summary\": \"Get cluster nodes configuration request status\",\n        \"operationId\": \"configureNodesRequestStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"requestedAt\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`ControlManagement` (ControlManagement)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/cluster/configuration/status\": {\n      \"get\": {\n        \"tags\": [\n          \"Cluster\"\n        ],\n        \"summary\": \"Get cluster nodes configuration current status\",\n        \"operationId\": \"configureNodesStatus\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`ControlManagement` (ControlManagement)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/cluster\": {\n      \"get\": {\n        \"tags\": [\n          \"Cluster\"\n        ],\n        \"summary\": \"Get information about known servers\",\n        \"operationId\": \"getClustersInfo\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Cluster\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`ControlManagement` (ControlManagement)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/datacenterTopology\": {\n      \"get\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Get cluster topology draft | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"getMultiDCTopologyDraft\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MultiDatacenterTopology\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Create cluster topology draft | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"createMultiDCTopologyDraft\",\n        \"requestBody\": {\n          \"content\": {\n            \"*/*\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/DatacenterMigrationDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"400\": {\n            \"description\": \"Invalid datacenter migration draft\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Delete cluster topology draft | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"deleteMultiDCTopologyDraft\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/finish\": {\n      \"post\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Finish migration | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"finishMigration\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"400\": {\n            \"description\": \"Request is incorrect please validate your path and arguments.\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected problem in server.\"\n          },\n          \"512\": {\n            \"description\": \"There was problem in your request. Please check body or logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/clusterState\": {\n      \"get\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Get cluster state of migration from single to multi datacenter cluster and its sub steps | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"getClusterState\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SingleToMultiDcMigrationClusterState\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      },\n      \"put\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Modify the overall cluster state of migration from single to multi datacenter cluster | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"modifyClusterState\",\n        \"parameters\": [\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"FAILED\",\n                \"IN_PROGRESS\",\n                \"NOT_STARTED\",\n                \"SUCCEEDED\"\n              ]\n            }\n          },\n          {\n            \"name\": \"details\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"default\": \"\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"No Content\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/cassandra/newDc/{requestId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Get cassandra migration status in new datacenter | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"getMigrateCassandraNewDatacenter\",\n        \"parameters\": [\n          {\n            \"name\": \"requestId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"207\": {\n            \"description\": \"Your request is still progressed.\"\n          },\n          \"400\": {\n            \"description\": \"Request is incorrect please validate your path and arguments.\"\n          },\n          \"404\": {\n            \"description\": \"There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected problem in server.\"\n          },\n          \"512\": {\n            \"description\": \"There was problem in your request. Please check body or logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/cassandra/currentDc/{requestId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Get cassandra migration status in current datacenter | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"getMigrateCassandraOldDatacenter\",\n        \"parameters\": [\n          {\n            \"name\": \"requestId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"207\": {\n            \"description\": \"Your request is still progressed.\"\n          },\n          \"400\": {\n            \"description\": \"Request is incorrect please validate your path and arguments.\"\n          },\n          \"404\": {\n            \"description\": \"There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected problem in server.\"\n          },\n          \"512\": {\n            \"description\": \"There was problem in your request. Please check body or logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/elasticsearch/{requestId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Get elasticsearch migration status | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"getMigrateElasticsearchStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"requestId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"207\": {\n            \"description\": \"Your request is still progressed.\"\n          },\n          \"400\": {\n            \"description\": \"Request is incorrect please validate your path and arguments.\"\n          },\n          \"404\": {\n            \"description\": \"There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected problem in server.\"\n          },\n          \"512\": {\n            \"description\": \"There was problem in your request. Please check body or logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/server/{requestId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Get server migration status | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"getMigrateServerStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"requestId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"207\": {\n            \"description\": \"Your request is still progressed.\"\n          },\n          \"400\": {\n            \"description\": \"Request is incorrect please validate your path and arguments.\"\n          },\n          \"404\": {\n            \"description\": \"There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected problem in server.\"\n          },\n          \"512\": {\n            \"description\": \"There was problem in your request. Please check body or logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/inServerconfigState\": {\n      \"get\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Get state of in-server config migration (from single to multi datacenter cluster) | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"getMigrationStateForAllComponents\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InServerConfigDatacenterMigrationState\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/nodekeeper/healthCheck\": {\n      \"get\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Get nodekeeper helathcheck | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"getMultiDcNodekeeperHealthcheck\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"400\": {\n            \"description\": \"Request is incorrect please validate your path and arguments.\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected problem in server.\"\n          },\n          \"512\": {\n            \"description\": \"There was problem in your request. Please check body or logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/clusterReplicationPreparation\": {\n      \"get\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Get progress status of cluster preparation for a replication | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"getPrepareClusterForReplicationProgress\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ClusterPreparationForReplicationDto\"\n                }\n              }\n            }\n          },\n          \"207\": {\n            \"description\": \"Your request is still progressed.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ClusterPreparationForReplicationDto\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache\"\n          },\n          \"512\": {\n            \"description\": \"There was problem in your request. Please check body or logs for more details.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ClusterPreparationForReplicationDto\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Start procedure of cluster preparation for a replication | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"initPrepareClusterForReplication\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected problem in server.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/clusterState/{subStep}\": {\n      \"get\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Get sub step of migration from single to multi datacenter cluster | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"getSubStepState\",\n        \"parameters\": [\n          {\n            \"name\": \"subStep\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SERVER_RECONFIGURATION\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MigrationState\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      },\n      \"put\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Modify sub step of migration from single to multi datacenter cluster | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"modifySubStepState\",\n        \"parameters\": [\n          {\n            \"name\": \"subStep\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"SERVER_RECONFIGURATION\"\n              ]\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"FAILED\",\n                \"IN_PROGRESS\",\n                \"NOT_STARTED\",\n                \"SUCCEEDED\"\n              ]\n            }\n          },\n          {\n            \"name\": \"details\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"No Content\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/clusterNodes/currentDc/{requestId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Get topology configuration status | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"getTopologyConfiguration\",\n        \"parameters\": [\n          {\n            \"name\": \"requestId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"207\": {\n            \"description\": \"Your request is still progressed.\"\n          },\n          \"400\": {\n            \"description\": \"Request is incorrect please validate your path and arguments.\"\n          },\n          \"404\": {\n            \"description\": \"There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected problem in server.\"\n          },\n          \"512\": {\n            \"description\": \"There was problem in your request. Please check body or logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/cassandra/rebuildStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Verify cassandra rebuild status | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"getVerifyCassandraStatus\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"400\": {\n            \"description\": \"Request is incorrect please validate your path and arguments.\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected problem in server.\"\n          },\n          \"512\": {\n            \"description\": \"There was problem in your request. Please check body or logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/elasticsearch/indexMigrationStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Verify elasticsearch migration status | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"getVerifyElasticsearchMigration\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"400\": {\n            \"description\": \"Request is incorrect please validate your path and arguments.\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected problem in server.\"\n          },\n          \"512\": {\n            \"description\": \"There was problem in your request. Please check body or logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/lostDatacenterCleanUp\": {\n      \"post\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Clean up lost datacenter settings | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"initDatacenterCleanUp\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"400\": {\n            \"description\": \"Request is incorrect please validate your path and arguments.\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected problem in server.\"\n          },\n          \"512\": {\n            \"description\": \"There was problem in your request. Please check body or logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/cassandra/newDc\": {\n      \"post\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Start cassandra migration in new datacenter | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"initMigrateCassandraNewDatacenter\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"400\": {\n            \"description\": \"Request is incorrect please validate your path and arguments.\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected problem in server.\"\n          },\n          \"512\": {\n            \"description\": \"There was problem in your request. Please check body or logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/cassandra/currentDc\": {\n      \"post\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Start cassandra migration in current datacenter | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"initMigrateCassandraOldDatacenter\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"400\": {\n            \"description\": \"Request is incorrect please validate your path and arguments.\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected problem in server.\"\n          },\n          \"512\": {\n            \"description\": \"There was problem in your request. Please check body or logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/clusterNodes/currentDc\": {\n      \"post\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Start cluster topology configuration - open firewall ports | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"initTopologyConfiguration\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"400\": {\n            \"description\": \"Request is incorrect please validate your path and arguments.\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected problem in server.\"\n          },\n          \"512\": {\n            \"description\": \"There was problem in your request. Please check body or logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/elasticsearch\": {\n      \"post\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Start elasticsearch migration | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"migrateElasticsearch\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"400\": {\n            \"description\": \"Request is incorrect please validate your path and arguments.\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected problem in server.\"\n          },\n          \"512\": {\n            \"description\": \"There was problem in your request. Please check body or logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/migration/server\": {\n      \"post\": {\n        \"tags\": [\n          \"Migration to multi-datacenter deployment\"\n        ],\n        \"summary\": \"Start server migration in current datacenter | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"migrateServer\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"400\": {\n            \"description\": \"Request is incorrect please validate your path and arguments.\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected problem in server.\"\n          },\n          \"512\": {\n            \"description\": \"There was problem in your request. Please check body or logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/restore/elasticsearch/recover\": {\n      \"get\": {\n        \"tags\": [\n          \"Elasticsearch disaster recovery in multi-datacenter deployment\"\n        ],\n        \"summary\": \"Get status of disaster recovery. | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"getRecoverStatus\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"207\": {\n            \"description\": \"Your request is still progressed.\"\n          },\n          \"404\": {\n            \"description\": \"There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache\"\n          },\n          \"501\": {\n            \"description\": \"Path not implemented.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"Elasticsearch disaster recovery in multi-datacenter deployment\"\n        ],\n        \"summary\": \"Recover elasticsearch from a snapshot on one datacenter. | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"startRecover\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"400\": {\n            \"description\": \"Request is incorrect please validate your path and arguments.\"\n          },\n          \"501\": {\n            \"description\": \"Path not implemented.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/restore/server/recovery\": {\n      \"post\": {\n        \"tags\": [\n          \"Elasticsearch disaster recovery in multi-datacenter deployment\"\n        ],\n        \"summary\": \"Migrate servers and start components after disaster recovery | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"startComponentsAfterMigration\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"400\": {\n            \"description\": \"Request is incorrect please validate your path and arguments.\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected problem in server.\"\n          },\n          \"512\": {\n            \"description\": \"There was problem in your request. Please check body or logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/multiDc/restore/server/recovery/{requestId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Elasticsearch disaster recovery in multi-datacenter deployment\"\n        ],\n        \"summary\": \"Get status after server migration and start components in disaster recovery | maturity=EARLY_ADOPTER\",\n        \"operationId\": \"startComponentsAfterMigration_1\",\n        \"parameters\": [\n          {\n            \"name\": \"requestId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful\"\n          },\n          \"207\": {\n            \"description\": \"Your request is still progressed.\"\n          },\n          \"400\": {\n            \"description\": \"Request is incorrect please validate your path and arguments.\"\n          },\n          \"404\": {\n            \"description\": \"There is no response for your request id. Please make sure that request id is correct and retry. You may get this error when components are restarting or this request is already removed from cache\"\n          },\n          \"500\": {\n            \"description\": \"Unexpected problem in server.\"\n          },\n          \"512\": {\n            \"description\": \"There was problem in your request. Please check body or logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-maturity\": \"EARLY_ADOPTER\",\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/elastic/upgradeStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"Elasticsearch Management API\"\n        ],\n        \"summary\": \"Checks if it is safe to upgrade elasticsearch \",\n        \"operationId\": \"checkElasticsearchUpgradePossibility\",\n        \"parameters\": [\n          {\n            \"name\": \"expectedElasticsearchNodes\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\",\n              \"default\": -1\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ElasticsearchUpgradeDTO\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/elastic/ccr/autoFollowPattern\": {\n      \"post\": {\n        \"tags\": [\n          \"Elasticsearch Management API\"\n        ],\n        \"summary\": \"Creates auto follow pattern for MultiDC environment\",\n        \"operationId\": \"createAutoFollowPattern\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ElasticsearchOperationDto\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Elasticsearch Management API\"\n        ],\n        \"summary\": \"Deletes auto follow pattern for MultiDC environment\",\n        \"operationId\": \"deleteAutoFollowPattern\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ElasticsearchOperationDto\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/firewallManagement/addClusterNode\": {\n      \"post\": {\n        \"tags\": [\n          \"Firewall configuration\"\n        ],\n        \"summary\": \"Add cluster node\",\n        \"operationId\": \"addClusterNodes\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/NodeConfigDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          },\n          \"422\": {\n            \"description\": \"Addition of node failed\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/firewallManagement/removeClusterNode\": {\n      \"get\": {\n        \"tags\": [\n          \"Firewall configuration\"\n        ],\n        \"operationId\": \"getAsyncNodeRemovalStatus\",\n        \"responses\": {\n          \"default\": {\n            \"description\": \"default response\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"Firewall configuration\"\n        ],\n        \"summary\": \"Remove cluster node\",\n        \"operationId\": \"removeClusterNodes\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FirewallNodeIp\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          },\n          \"422\": {\n            \"description\": \"Removal of node failed\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/firewallManagement/clusterNodes\": {\n      \"get\": {\n        \"tags\": [\n          \"Firewall configuration\"\n        ],\n        \"summary\": \"Get cluster nodes\",\n        \"operationId\": \"getClusterNodes\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ClusterNodesConfigDto\"\n                }\n              }\n            }\n          },\n          \"510\": {\n            \"description\": \"Operation failed\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/firewallManagement/removeClusterNode/{ip}\": {\n      \"delete\": {\n        \"tags\": [\n          \"Firewall configuration\"\n        ],\n        \"operationId\": \"removeClusterNodesDeleteMethod\",\n        \"parameters\": [\n          {\n            \"name\": \"ip\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"scope\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"asyncCrossNodeCommunication\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"default response\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/nodeManagement/deadNodeCleaning\": {\n      \"delete\": {\n        \"tags\": [\n          \"Cluster node\"\n        ],\n        \"operationId\": \"deadNodeCleaning\",\n        \"parameters\": [\n          {\n            \"name\": \"ip\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"requestedOnNode\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"requestedByUser\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"default response\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/nodeManagement/finalizeJoining\": {\n      \"put\": {\n        \"tags\": [\n          \"Cluster node\"\n        ],\n        \"operationId\": \"finalizeJoining\",\n        \"parameters\": [\n          {\n            \"name\": \"ip\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"status\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"ABORTED\",\n                \"FAILURE\",\n                \"IN_PROGRESS\",\n                \"STOPPED\",\n                \"SUCCESS\",\n                \"UNKNOWN\"\n              ]\n            }\n          },\n          {\n            \"name\": \"forceUnlock\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/FinalizeNodeJoiningRequestDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"default response\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/nodeManagement/cassandraQuorumOverride/{quorum}\": {\n      \"put\": {\n        \"tags\": [\n          \"Cluster node\"\n        ],\n        \"summary\": \"Override cassandra read quorum at runtime only for this particular server instance\",\n        \"description\": \"This API allows you to override cassandra read quorum of this particular server instance. Other server instances are not affected.\\n\\nNote that this will not be persisted, after server restart this override will be lost!\\n\\nTypically you only need it in multi-datacenter fail-over scenarios. \\n\\n To reset the overrides call the API with the UNSET value.\",\n        \"operationId\": \"forceCassandraQuorumOverride\",\n        \"parameters\": [\n          {\n            \"name\": \"quorum\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"CL_ALL\",\n                \"CL_ANY\",\n                \"CL_EACH_QUORUM\",\n                \"CL_LOCAL_ONE\",\n                \"CL_LOCAL_QUORUM\",\n                \"CL_ONE\",\n                \"CL_QUORUM\",\n                \"CL_THREE\",\n                \"CL_TWO\",\n                \"UNSET\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/nodeManagement/cassandraQuorumOverride\": {\n      \"get\": {\n        \"tags\": [\n          \"Cluster node\"\n        ],\n        \"summary\": \"Get the cassandra read quorum override.\",\n        \"description\": \"Does not return actual used read quorum if no override is set, in this case UNSET is returned.\",\n        \"operationId\": \"getCassandraQuorumOverride\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/nodeManagement/join/check/{requestId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Cluster node\"\n        ],\n        \"summary\": \"Verification if a node can be added to the cluster status\",\n        \"operationId\": \"getNodeJoin\",\n        \"parameters\": [\n          {\n            \"name\": \"requestId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeJoiningPreCheckStatusDto\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/nodeManagement/joining/{requestId}\": {\n      \"get\": {\n        \"tags\": [\n          \"Cluster node\"\n        ],\n        \"operationId\": \"getNodeJoining\",\n        \"parameters\": [\n          {\n            \"name\": \"requestId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"default response\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/nodeManagement/productVersion\": {\n      \"get\": {\n        \"tags\": [\n          \"Cluster node\"\n        ],\n        \"summary\": \"Get product version\",\n        \"operationId\": \"getNodeProductVersion\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProductVersion\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/nodeManagement/nodeRemovalStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"Cluster node\"\n        ],\n        \"summary\": \"Get node removal status\",\n        \"description\": \"Responses with status of current node removal (if it's already running) and statuses of historical removals.\",\n        \"operationId\": \"getNodeRemovalStatus\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/nodeManagement/nodeServerStatus\": {\n      \"get\": {\n        \"tags\": [\n          \"Cluster node\"\n        ],\n        \"summary\": \"Get node's server status\",\n        \"operationId\": \"getNodeServerStatus\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"string\",\n                  \"enum\": [\n                    \"DATABASE_DISCONNECTED\",\n                    \"EMERGENCY\",\n                    \"OFFLINE\",\n                    \"RUNNING\",\n                    \"RUNNING_FORSAKEN\",\n                    \"SHUTDOWN\",\n                    \"SHUTDOWN_IMMINENT\",\n                    \"SHUTDOWN_PHASED_OUT\",\n                    \"STARTUP\",\n                    \"STARTUP_CANCELED\",\n                    \"STARTUP_SUSPENDED\",\n                    \"UNDEFINED\"\n                  ]\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/nodeManagement/nodekeeperProductVersion\": {\n      \"get\": {\n        \"tags\": [\n          \"Cluster node\"\n        ],\n        \"operationId\": \"getNodekeeperProductVersion\",\n        \"responses\": {\n          \"default\": {\n            \"description\": \"default response\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/nodeManagement/join/check\": {\n      \"post\": {\n        \"tags\": [\n          \"Cluster node\"\n        ],\n        \"summary\": \"Initialize verification if a node can be added to the cluster\",\n        \"operationId\": \"initializeNodeJoinCheck\",\n        \"parameters\": [\n          {\n            \"name\": \"ip\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"datacenter\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/NodeJoiningInitializePreCheckResponseDto\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/nodeManagement/joining\": {\n      \"post\": {\n        \"tags\": [\n          \"Cluster node\"\n        ],\n        \"operationId\": \"initializeNodeJoining\",\n        \"parameters\": [\n          {\n            \"name\": \"ip\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"timestamp\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int64\"\n            }\n          },\n          {\n            \"name\": \"datacenter\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"default response\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/nodeManagement/nodeRestart\": {\n      \"post\": {\n        \"tags\": [\n          \"Cluster node\"\n        ],\n        \"summary\": \"Restart node\",\n        \"operationId\": \"nodeRestart\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          },\n          \"510\": {\n            \"description\": \"Restart failed\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/nodeManagement/responsibilityOverride\": {\n      \"put\": {\n        \"tags\": [\n          \"Cluster node\"\n        ],\n        \"summary\": \"Override which nodes can perform internal responsibilities\",\n        \"description\": \"This API allows you to define which nodes can perform cluster-wide responsibilities, for example metric aging or problem detection, by specifying nodes IDs. \\n\\nTypically you only need it in multi-datacenter fail-over scenarios. \\n\\n To reset the overrides call the API with an empty list of node IDs.\",\n        \"operationId\": \"responsibilityOverride\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ResponsibilityOverrideDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/nodeManagement/installerStatus\": {\n      \"post\": {\n        \"tags\": [\n          \"Cluster node\"\n        ],\n        \"operationId\": \"setInstallerStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"ip\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/InstallerStatusDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"default\": {\n            \"description\": \"default response\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/nodeManagement/triggerRemoveNode\": {\n      \"post\": {\n        \"tags\": [\n          \"Cluster node\"\n        ],\n        \"summary\": \"Remove node\",\n        \"operationId\": \"triggerRemoveNode\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/RemoveNode\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Node removal process started successfully\"\n          },\n          \"207\": {\n            \"description\": \"Node not found by id or IP address\"\n          },\n          \"505\": {\n            \"description\": \"Node joining operation is in progress\"\n          },\n          \"506\": {\n            \"description\": \"Node removal operation is in progress\"\n          },\n          \"507\": {\n            \"description\": \"Node removal operation timeout\"\n          },\n          \"530\": {\n            \"description\": \"Offline node removal operation error. Cleaning cluster configuration was not completed\"\n          },\n          \"531\": {\n            \"description\": \"Lock node removal operation error\"\n          },\n          \"532\": {\n            \"description\": \"Trigger node removal process error\"\n          },\n          \"533\": {\n            \"description\": \"Node removal operation is not allowed. Upgrade is in progress.\"\n          },\n          \"534\": {\n            \"description\": \"Node removal operation is not allowed. Cassandra nodes are not in valid state (UN).\"\n          },\n          \"535\": {\n            \"description\": \"Node removal operation is not allowed. Elasticsearch is sharding data.\"\n          },\n          \"536\": {\n            \"description\": \"Node is not reachable error\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/nodeManagement/tryLockJoining\": {\n      \"put\": {\n        \"tags\": [\n          \"Cluster node\"\n        ],\n        \"operationId\": \"tryLockJoining\",\n        \"parameters\": [\n          {\n            \"name\": \"ip\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"default response\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/nodeManagement/tryLockRemoval\": {\n      \"put\": {\n        \"tags\": [\n          \"Cluster node\"\n        ],\n        \"operationId\": \"tryLockRemoval\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"ip\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"requestedOnNode\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"requestedByUser\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"default response\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/nodeManagement/unlockRemoval\": {\n      \"put\": {\n        \"tags\": [\n          \"Cluster node\"\n        ],\n        \"operationId\": \"unlockRemoval\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          {\n            \"name\": \"ip\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"removalStopReason\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"default\": {\n            \"description\": \"default response\",\n            \"content\": {\n              \"application/json\": {}\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`UnattendedInstall` (UnattendedInstall)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/preferences\": {\n      \"get\": {\n        \"tags\": [\n          \"Preferences\"\n        ],\n        \"summary\": \"Get Dynatrace Managed specific properties\",\n        \"operationId\": \"getProperties\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Preferences\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"Preferences\"\n        ],\n        \"summary\": \"Update properties\",\n        \"operationId\": \"updateProperties\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/Preferences\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Preferences\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal server error\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/smtp\": {\n      \"get\": {\n        \"tags\": [\n          \"SMTP settings\"\n        ],\n        \"summary\": \"Get SMTP configuration\",\n        \"operationId\": \"getSmtpConfiguration\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SmtpConfiguration\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"SMTP settings\"\n        ],\n        \"summary\": \"Update SMTP configuration\",\n        \"operationId\": \"updateSmtpConfiguration\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/SmtpConfiguration\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SmtpConfiguration\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid SMTP configuration\"\n          },\n          \"406\": {\n            \"description\": \"SMTP configuration not accepted\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/smtp/sendTestMessage/{emailAddress}\": {\n      \"post\": {\n        \"tags\": [\n          \"SMTP settings\"\n        ],\n        \"summary\": \"Send test email\",\n        \"description\": \"You can send only one test email per minute\",\n        \"operationId\": \"sendTestEmail\",\n        \"parameters\": [\n          {\n            \"name\": \"emailAddress\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully sent\",\n            \"content\": {\n              \"text/plain\": {}\n            }\n          },\n          \"406\": {\n            \"description\": \"Incorrect email address\"\n          },\n          \"429\": {\n            \"description\": \"Too short a time interval between sending attempts\"\n          },\n          \"510\": {\n            \"description\": \"Sending email failed\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/sslCertificate/{entityType}/{entityId}\": {\n      \"get\": {\n        \"tags\": [\n          \"SSL certificates\"\n        ],\n        \"summary\": \"SSL certificate details.\",\n        \"operationId\": \"getSslCertificateDetails\",\n        \"parameters\": [\n          {\n            \"name\": \"entityType\",\n            \"in\": \"path\",\n            \"description\": \"entity type, possible values = \\\"SERVER, COLLECTOR\\\" \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COLLECTOR\",\n                \"SERVER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"entityId\",\n            \"in\": \"path\",\n            \"description\": \"Node ID, which can be extracted from the URL in 'Node details' view.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SSLDetails\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal server error.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/sslCertificate/store/{entityType}/{entityId}\": {\n      \"get\": {\n        \"tags\": [\n          \"SSL certificates\"\n        ],\n        \"summary\": \"Get certificate-storage status\",\n        \"operationId\": \"getStoringSslCertificateStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"entityType\",\n            \"in\": \"path\",\n            \"description\": \"entity type, possible values = \\\"COLLECTOR\\\" \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COLLECTOR\",\n                \"SERVER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"entityId\",\n            \"in\": \"path\",\n            \"description\": \"Node ID, which can be extracted from the URL in 'Node details' view.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful or in progress\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateStoreStatus\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Incorrect entity type\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateStoreStatus\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Status not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateStoreStatus\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal error\"\n          },\n          \"522\": {\n            \"description\": \"Certificate chain is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateStoreStatus\"\n                }\n              }\n            }\n          },\n          \"523\": {\n            \"description\": \"Private key does not match public key certificate\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateStoreStatus\"\n                }\n              }\n            }\n          },\n          \"525\": {\n            \"description\": \"Public key certificate is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateStoreStatus\"\n                }\n              }\n            }\n          },\n          \"526\": {\n            \"description\": \"Private key is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateStoreStatus\"\n                }\n              }\n            }\n          },\n          \"527\": {\n            \"description\": \"Error while storing SSL certificate\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateStoreStatus\"\n                }\n              }\n            }\n          },\n          \"528\": {\n            \"description\": \"Certificate has been stored but has not been refreshed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateStoreStatus\"\n                }\n              }\n            }\n          },\n          \"529\": {\n            \"description\": \"Internal error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateStoreStatus\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"SSL certificates\"\n        ],\n        \"summary\": \"Store SSL certificate status\",\n        \"operationId\": \"storeSslCertificateStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"entityType\",\n            \"in\": \"path\",\n            \"description\": \"entity type, possible values = \\\"SERVER, COLLECTOR\\\" \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"COLLECTOR\",\n                \"SERVER\"\n              ]\n            }\n          },\n          {\n            \"name\": \"entityId\",\n            \"in\": \"path\",\n            \"description\": \"Node ID, which can be extracted from the URL in 'Node details' view.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/sslCertDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful or in progress\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateStoreStatus\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Incorrect entity type\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateStoreStatus\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal error\"\n          },\n          \"522\": {\n            \"description\": \"Certificate chain is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateStoreStatus\"\n                }\n              }\n            }\n          },\n          \"523\": {\n            \"description\": \"Private key does not match public key certificate\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateStoreStatus\"\n                }\n              }\n            }\n          },\n          \"525\": {\n            \"description\": \"Public key certificate is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateStoreStatus\"\n                }\n              }\n            }\n          },\n          \"526\": {\n            \"description\": \"Private key is invalid\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateStoreStatus\"\n                }\n              }\n            }\n          },\n          \"527\": {\n            \"description\": \"Error while storing SSL certificate\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateStoreStatus\"\n                }\n              }\n            }\n          },\n          \"528\": {\n            \"description\": \"Certificate has been stored but has not been refreshed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateStoreStatus\"\n                }\n              }\n            }\n          },\n          \"529\": {\n            \"description\": \"Internal error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateStoreStatus\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/sso/saml/sp/cert\": {\n      \"get\": {\n        \"tags\": [\n          \"SSO configuration\"\n        ],\n        \"summary\": \"Get SAML SP X.509 certificate details\",\n        \"operationId\": \"getSamlSpCert\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/CertificateDetails\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal server error.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"put\": {\n        \"tags\": [\n          \"SSO configuration\"\n        ],\n        \"summary\": \"Update SAML SP X.509 certificate\",\n        \"operationId\": \"updateSamlSpCert\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/certDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          },\n          \"400\": {\n            \"description\": \"Failed. The input is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorEnvelope\"\n                }\n              }\n            }\n          },\n          \"510\": {\n            \"description\": \"Operation failed. Check server logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/supportArchive/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Support Archives\"\n        ],\n        \"summary\": \"Get support upgrade file\",\n        \"operationId\": \"getSupportArchive\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok - download file\",\n            \"content\": {\n              \"application/zip\": {}\n            }\n          },\n          \"202\": {\n            \"description\": \"Support archive generation has not completed yet\"\n          },\n          \"404\": {\n            \"description\": \"Could not find support archive request\"\n          },\n          \"410\": {\n            \"description\": \"Support archive was already deleted from disk\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"put\": {\n        \"tags\": [\n          \"Support Archives\"\n        ],\n        \"summary\": \"Cancel support upgrade generation\",\n        \"operationId\": \"cancelSupportArchiveCreation\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Support Archives\"\n        ],\n        \"summary\": \"Delete existing support archive\",\n        \"operationId\": \"deleteSupportArchive\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok - deleted successfully\"\n          },\n          \"404\": {\n            \"description\": \"Could not find support archive request\"\n          },\n          \"409\": {\n            \"description\": \"Support archive generation in progress - please cancel it using /cancel\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/supportArchive/{id}/report\": {\n      \"get\": {\n        \"tags\": [\n          \"Support Archives\"\n        ],\n        \"summary\": \"Get support upgrade generation report\",\n        \"operationId\": \"getSupportArchiveReport\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Support archive generation report\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SupportArchiveDownload\"\n                }\n              }\n            }\n          },\n          \"202\": {\n            \"description\": \"Support archive generation has not completed yet\"\n          },\n          \"404\": {\n            \"description\": \"Could not find support archive request\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/supportArchive/{id}/status\": {\n      \"get\": {\n        \"tags\": [\n          \"Support Archives\"\n        ],\n        \"summary\": \"Get support upgrade generation status\",\n        \"operationId\": \"getSupportArchiveStatus\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Support archive generation state\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SupportArchiveDownload\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Could not find support archive request\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/supportArchive\": {\n      \"post\": {\n        \"tags\": [\n          \"Support Archives\"\n        ],\n        \"summary\": \"Trigger support upgrade generation\",\n        \"operationId\": \"startCreatingSupportArchive\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/OnPremClusterSupportArchiveRequestImpl\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Ok - returns support archive id\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"integer\",\n                  \"format\": \"int64\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Could not trigger support archive generation\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/upgradeManagement/installationFiles/{type}/{version}\": {\n      \"put\": {\n        \"tags\": [\n          \"Updates\"\n        ],\n        \"summary\": \"Modify update package state. Particular package might be excluded from download or re-downloaded.\",\n        \"operationId\": \"editInstallationBatch\",\n        \"parameters\": [\n          {\n            \"name\": \"type\",\n            \"in\": \"path\",\n            \"description\": \"Installation package type, possible values = \\\"SERVER, AGENT, JS_AGENT, SG, NGINX\\\" \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AGENT\",\n                \"DEPLOYMENT_ORCHESTRATION\",\n                \"DOCKER_AGENT\",\n                \"JS_AGENT\",\n                \"NGINX\",\n                \"ODIN\",\n                \"SERVER\",\n                \"SG\",\n                \"SYNTHETIC\"\n              ]\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"description\": \"The JSON body of the request. Contains parameters of update entry configuration.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UpdateEntryChangeRequestDto\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully scheduled. Package should be excluded/re-downloaded soon.\"\n          },\n          \"404\": {\n            \"description\": \"Specified installation package was not found.\"\n          },\n          \"412\": {\n            \"description\": \"Operation is not allowed. See response message for more details.\"\n          },\n          \"510\": {\n            \"description\": \"Operation failed. Check server logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Updates\"\n        ],\n        \"summary\": \"Trigger removal of installation package\",\n        \"operationId\": \"removeInstallationBatch\",\n        \"parameters\": [\n          {\n            \"name\": \"type\",\n            \"in\": \"path\",\n            \"description\": \"Installation package type, possible values = \\\"SERVER, AGENT, JS_AGENT, SG, NGINX\\\" \",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"AGENT\",\n                \"DEPLOYMENT_ORCHESTRATION\",\n                \"DOCKER_AGENT\",\n                \"JS_AGENT\",\n                \"NGINX\",\n                \"ODIN\",\n                \"SERVER\",\n                \"SG\",\n                \"SYNTHETIC\"\n              ]\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully scheduled. Package should be removed from all nodes within a couple of minutes.\"\n          },\n          \"404\": {\n            \"description\": \"Specified installation package was not found.\"\n          },\n          \"412\": {\n            \"description\": \"Removing installation files is not allowed. Update list is synchronized with Mission Control.\"\n          },\n          \"510\": {\n            \"description\": \"Operation failed. Check server logs for more details.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/upgradeManagement/clusterUpgradeStartupState\": {\n      \"get\": {\n        \"tags\": [\n          \"Updates\"\n        ],\n        \"summary\": \"Get system precondition check state for the cluster\",\n        \"operationId\": \"getClusterUpgradeStartupState\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UpgradeStartupState\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/upgradeManagement/installationFiles\": {\n      \"get\": {\n        \"tags\": [\n          \"Updates\"\n        ],\n        \"summary\": \"Get list of installation files and their cluster-wide availability information\",\n        \"operationId\": \"getInstallationFileList\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json; charset=utf-8\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/InstallationPackage\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/upgradeManagement/triggerUpgrade\": {\n      \"post\": {\n        \"tags\": [\n          \"Updates\"\n        ],\n        \"summary\": \"Trigger manual cluster upgrade\",\n        \"operationId\": \"triggerManualUpgrade\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Started successfully.\"\n          },\n          \"412\": {\n            \"description\": \"Triggering of upgrade failed due to missing new version on all nodes.\"\n          },\n          \"510\": {\n            \"description\": \"Could not trigger upgrade. Check logs for details...\"\n          },\n          \"553\": {\n            \"description\": \"Upgrade suspended by Dynatrace Mission Control. Could not upgrade cluster now.\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`Nodekeeper` (Nodekeeper access for node management)\"\n        ]\n      }\n    },\n    \"/groups\": {\n      \"get\": {\n        \"tags\": [\n          \"User groups\"\n        ],\n        \"summary\": \"Get groups\",\n        \"operationId\": \"getGroups\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/GroupConfig\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"put\": {\n        \"tags\": [\n          \"User groups\"\n        ],\n        \"summary\": \"Update group\",\n        \"operationId\": \"updateGroup\",\n        \"requestBody\": {\n          \"description\": \"Request body used for updating existing user group. \\nFor updating user group set correct 'id', not setting 'id' will return 'Bad Request'. \\nTrying to change group name to one that already exists will return 'Bad Request'. \\nTrying to update group that doesn't exist will return 'Not Acceptable'.\\n'isAccessAccount' value is ignored when 'Dynatrace Platform Subscription' is not in use. \",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GroupConfig\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully updated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GroupConfig\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Operation failed. The input is invalid. Possible reasons:\\n - No group information received for the request to create a group\\n - Group ID is not set\\n - Group name cannot be null or empty\\n - At least one of the specified environments doesn't exist\\n\"\n          },\n          \"406\": {\n            \"description\": \"Not acceptable. Group name already exists or group not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"User groups\"\n        ],\n        \"summary\": \"Create group\",\n        \"operationId\": \"createGroup\",\n        \"requestBody\": {\n          \"description\": \"Request body used for creating new user group. \\nFor creating user group leave 'id' empty, setting 'id' will return 'Bad Request'. \\nTrying to create group with name that already exists will return 'Not Acceptable'.\\n'isAccessAccount' value is ignored when 'Dynatrace Platform Subscription' is not in use.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/GroupConfig\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully updated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GroupConfig\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Operation failed. The input is invalid. Possible reasons:\\n - No group information received for the request to create a group\\n - Group ID cannot be set\\n - Group name cannot be null or empty\\n - At least one of the specified environments doesn't exist\\n\"\n          },\n          \"406\": {\n            \"description\": \"Not acceptable. Group already exists\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/groups/bulk\": {\n      \"post\": {\n        \"tags\": [\n          \"User groups\"\n        ],\n        \"summary\": \"Create groups\",\n        \"operationId\": \"createGroups\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/GroupConfig\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/GroupConfig\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"No group information received for the create-group request\"\n          },\n          \"406\": {\n            \"description\": \"Unacceptable or incomplete request. Some groups were added.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/GroupConfig\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/groups/{groupId}\": {\n      \"get\": {\n        \"tags\": [\n          \"User groups\"\n        ],\n        \"summary\": \"Get group\",\n        \"operationId\": \"getGroup\",\n        \"parameters\": [\n          {\n            \"name\": \"groupId\",\n            \"in\": \"path\",\n            \"description\": \"Group ID path parameter. Missing or empty values will return a 'Bad Request'.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GroupConfig\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"No ID information received for the request to get a group\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"User groups\"\n        ],\n        \"summary\": \"Delete group\",\n        \"operationId\": \"removeGroup\",\n        \"parameters\": [\n          {\n            \"name\": \"groupId\",\n            \"in\": \"path\",\n            \"description\": \"Group ID path parameter. Missing or empty values will return a 'Bad Request'.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully deleted\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/GroupConfig\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/groups/managementZones\": {\n      \"get\": {\n        \"tags\": [\n          \"User groups\"\n        ],\n        \"summary\": \"Get management zone permissions for all groups\",\n        \"description\": \"This is a list of management zone specific permissions only. Environment permissions are not taken into account here. Groups with permissions for whole environments can also see all management zones defined in these environments, even if they have no management zone specific permissions and the list returned by this request is empty.\",\n        \"operationId\": \"getManagementZonesPermissions\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/MzPermissionsForGroup\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"put\": {\n        \"tags\": [\n          \"User groups\"\n        ],\n        \"summary\": \"Update management zone permissions for a single group\",\n        \"operationId\": \"updateManagementZonesPermissionsForGroup\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/MzPermissionsForGroup\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully updated\"\n          },\n          \"400\": {\n            \"description\": \"Provided model is incorrect or is missing required elements\"\n          },\n          \"404\": {\n            \"description\": \"A group, environment or management zone does not exist\"\n          },\n          \"510\": {\n            \"description\": \"Operation failed\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/groups/managementZones/{groupId}\": {\n      \"get\": {\n        \"tags\": [\n          \"User groups\"\n        ],\n        \"summary\": \"Get management zone permissions for a given group\",\n        \"description\": \"This is a list of management zone specific permissions only. Environment permissions are not taken into account here. Groups with permissions for whole environments can also see all management zones defined in these environments, even if they have no management zone specific permissions and the list returned by this request is empty.\",\n        \"operationId\": \"getManagementZonesPermissionsForGroup\",\n        \"parameters\": [\n          {\n            \"name\": \"groupId\",\n            \"in\": \"path\",\n            \"description\": \"Group ID path parameter. Missing or empty values will return a 'Bad Request'.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/MzPermissionsForGroup\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"No ID information received for the request to get group MZ permissions\"\n          },\n          \"404\": {\n            \"description\": \"Group not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/users\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Get users\",\n        \"operationId\": \"getUsers\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserConfig\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"put\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Update user\",\n        \"operationId\": \"updateUser\",\n        \"requestBody\": {\n          \"description\": \"The JSON body of the request, containing parameters of the user.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserConfig\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully updated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserConfig\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Operation failed. The input is invalid. Possible reasons:\\n - all required values (ID, email, first name, last name) must be set\\n - invalid user data\\n - user email address already assigned\\n - user group ID does not exist\"\n          },\n          \"403\": {\n            \"description\": \"Operation forbidden - users and groups are fully managed via LDAP or SSO\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          },\n          \"406\": {\n            \"description\": \"Unacceptable request\"\n          },\n          \"524\": {\n            \"description\": \"Email address already registered\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Create user\",\n        \"operationId\": \"createUser\",\n        \"requestBody\": {\n          \"description\": \"The JSON body of the request, containing parameters of the user.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/UserConfig\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully created\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserConfig\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Operation failed. The input is invalid. Possible reasons:\\n - all required values (ID, email, first name, last name) must be set\\n - invalid user data\\n - user ID already exists\\n - user email address already assigned\\n - user group ID does not exist\"\n          },\n          \"403\": {\n            \"description\": \"Operation forbidden - users and groups are fully managed via LDAP or SSO\"\n          },\n          \"406\": {\n            \"description\": \"Unacceptable request\"\n          },\n          \"522\": {\n            \"description\": \"Couldn't create user\"\n          },\n          \"523\": {\n            \"description\": \"User already exists\"\n          },\n          \"524\": {\n            \"description\": \"Email address already registered\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/users/bulk\": {\n      \"post\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Create users\",\n        \"operationId\": \"createUsers\",\n        \"requestBody\": {\n          \"description\": \"The JSON body of the request, containing parameters of the users.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"$ref\": \"#/components/schemas/UserConfig\"\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserConfig\"\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Operation failed. The input is invalid. Possible reasons:\\n - no user information received for the create-users request\\n - all required values (ID, email, first name, last name) must be set\\n - invalid user data\\n - input contains duplicated IDs\\n - input contains duplicated email addresses\\n - user ID already exists\\n - user email address already assigned\\n - user group ID does not exist\"\n          },\n          \"403\": {\n            \"description\": \"Operation forbidden - either LDAP or SSO with group assignment integration is turned on\"\n          },\n          \"406\": {\n            \"description\": \"Unacceptable or incomplete request. Some users added\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/UserConfig\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/users/{id}\": {\n      \"get\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Get user\",\n        \"operationId\": \"getUser\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"User ID path parameter. Missing or empty values will return a 'Bad Request'\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserConfig\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"No ID information received for the get-user request\"\n          },\n          \"404\": {\n            \"description\": \"Not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Users\"\n        ],\n        \"summary\": \"Delete user\",\n        \"operationId\": \"removeUser\",\n        \"parameters\": [\n          {\n            \"name\": \"id\",\n            \"in\": \"path\",\n            \"description\": \"User ID path parameter. Missing or empty values will return a 'Bad Request'.\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully deleted\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/UserConfig\"\n                }\n              }\n            }\n          },\n          \"304\": {\n            \"description\": \"Not modified\"\n          },\n          \"400\": {\n            \"description\": \"No ID information received for the delete-user request\"\n          },\n          \"406\": {\n            \"description\": \"Unacceptable request\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/userRepository/authenticationMode\": {\n      \"get\": {\n        \"tags\": [\n          \"User repository configuration\"\n        ],\n        \"summary\": \"Get authentication mode\",\n        \"operationId\": \"getAuthenticationMode\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AuthenticationMode\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"User repository configuration\"\n        ],\n        \"summary\": \"Update authentication mode\",\n        \"operationId\": \"updateAuthenticationMode\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/AuthenticationModel\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/AuthenticationMode\"\n                }\n              }\n            }\n          },\n          \"406\": {\n            \"description\": \"Not Acceptable. LDAP cannot be turned on if \\\"Import user groups\\\" from SSO flag is turned on\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/userRepository/ldap/connectionConfiguration\": {\n      \"get\": {\n        \"tags\": [\n          \"User repository configuration\"\n        ],\n        \"summary\": \"Get LDAP configuration\",\n        \"operationId\": \"getLdapConnectionConfiguration\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LdapConnectionDescImpl\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"User repository configuration\"\n        ],\n        \"summary\": \"Update LDAP connection\",\n        \"operationId\": \"updateLdapConnection\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LdapConnectionDescImpl\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          },\n          \"406\": {\n            \"description\": \"Not Acceptable\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/userRepository/ldap/queryGroups\": {\n      \"get\": {\n        \"tags\": [\n          \"User repository configuration\"\n        ],\n        \"summary\": \"Get LDAP group configuration\",\n        \"operationId\": \"getLdapGroupsQuery\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LdapGroupsQueryDtoImpl\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"User repository configuration\"\n        ],\n        \"summary\": \"Update LDAP groups query configuration\",\n        \"operationId\": \"updateLdapGroupsQuery\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LdapGroupsQueryDtoImpl\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          },\n          \"406\": {\n            \"description\": \"Unacceptable request\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/userRepository/ldap/queryUsers\": {\n      \"get\": {\n        \"tags\": [\n          \"User repository configuration\"\n        ],\n        \"summary\": \"Get LDAP users query configuration\",\n        \"operationId\": \"getLdapLdapUsersQuery\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/LdapUsersQueryDescImpl\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"post\": {\n        \"tags\": [\n          \"User repository configuration\"\n        ],\n        \"summary\": \"Update LDAP users query configuration\",\n        \"operationId\": \"updateLdapUsersQueryDescImpl\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/LdapUsersQueryDescImpl\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\"\n          },\n          \"406\": {\n            \"description\": \"Unacceptable request\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    },\n    \"/proxy/configurations/{dc}\": {\n      \"get\": {\n        \"tags\": [\n          \"Internet proxy\"\n        ],\n        \"summary\": \"Get Data Center proxy configuration (Multi Data Center deployment)\",\n        \"operationId\": \"getOneOfMultiDCConfiguration\",\n        \"parameters\": [\n          {\n            \"name\": \"dc\",\n            \"in\": \"path\",\n            \"description\": \"Data Center\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternetProxy\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Proxy is not configured for given Data Center\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\"\n        ]\n      },\n      \"put\": {\n        \"tags\": [\n          \"Internet proxy\"\n        ],\n        \"summary\": \"Set/update Data Center proxy configuration (Multi Data Center deployment)\",\n        \"operationId\": \"modifyOneOfMultiDCConfiguration\",\n        \"parameters\": [\n          {\n            \"name\": \"dc\",\n            \"in\": \"path\",\n            \"description\": \"Data Center\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/InternetProxyChangeRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successful, new configuration created\"\n          },\n          \"204\": {\n            \"description\": \"Successful, configuration updated\"\n          },\n          \"400\": {\n            \"description\": \"Given proxy configuration is invalid\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\"\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Internet proxy\"\n        ],\n        \"summary\": \"Remove Data Center proxy configuration (Multi Data Center deployment)\",\n        \"operationId\": \"deleteOneOfMultiDCConfiguration\",\n        \"parameters\": [\n          {\n            \"name\": \"dc\",\n            \"in\": \"path\",\n            \"description\": \"Data Center\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful, previous configuration returned\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternetProxy\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Proxy was not configured for given Data Center\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\"\n        ]\n      }\n    },\n    \"/proxy/configuration\": {\n      \"get\": {\n        \"tags\": [\n          \"Internet proxy\"\n        ],\n        \"summary\": \"Get cluster proxy configuration\",\n        \"operationId\": \"getSingleDCConfiguration\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternetProxy\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Proxy is not configured\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\"\n        ]\n      },\n      \"put\": {\n        \"tags\": [\n          \"Internet proxy\"\n        ],\n        \"summary\": \"Set/update cluster proxy configuration\",\n        \"operationId\": \"modifySingleDCConfiguration\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/InternetProxyChangeRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Successful, new configuration created\"\n          },\n          \"204\": {\n            \"description\": \"Successful, configuration updated\"\n          },\n          \"400\": {\n            \"description\": \"Given proxy configuration is invalid\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\"\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\n          \"Internet proxy\"\n        ],\n        \"summary\": \"Remove cluster proxy configuration\",\n        \"operationId\": \"deleteSingleDCConfiguration\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful, previous configuration returned\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/InternetProxy\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Proxy was not configured\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\"\n        ]\n      }\n    },\n    \"/proxy/configurations\": {\n      \"get\": {\n        \"tags\": [\n          \"Internet proxy\"\n        ],\n        \"summary\": \"Get proxy configurations for all Data Centers (Multi Data Center deployment)\",\n        \"operationId\": \"getAllMultiDCConfigurations\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ProxyConfigurations\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\"\n        ]\n      }\n    },\n    \"/proxy/test/{dc}\": {\n      \"put\": {\n        \"tags\": [\n          \"Internet proxy\"\n        ],\n        \"summary\": \"Test Internet connection from specific Data Center using given proxy configuration (Multi Data Center deployment)\",\n        \"operationId\": \"testConnectionInMultiDCMode\",\n        \"parameters\": [\n          {\n            \"name\": \"dc\",\n            \"in\": \"path\",\n            \"description\": \"Data Center\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/InternetProxyChangeRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Request was processed, check response body for details\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ConnectionStatus\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\"\n        ]\n      }\n    },\n    \"/proxy/test\": {\n      \"put\": {\n        \"tags\": [\n          \"Internet proxy\"\n        ],\n        \"summary\": \"Test Internet connection using given proxy configuration\",\n        \"operationId\": \"testConnectionInSingleDCMode\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/InternetProxyChangeRequest\"\n              }\n            }\n          },\n          \"required\": true\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Request was processed, check response body for details\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ConnectionStatus\"\n                }\n              }\n            }\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ControlManagement` (ControlManagement)\",\n          \"`ServiceProviderAPI` (Service Provider API)\",\n          \"`UnattendedInstall` (UnattendedInstall)\"\n        ]\n      }\n    },\n    \"/passwordPolicy\": {\n      \"get\": {\n        \"tags\": [\n          \"Password policy\"\n        ],\n        \"summary\": \"Get default's realm password policy configuration\",\n        \"operationId\": \"getDefaultPasswordPolicy\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Success\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/PasswordPolicy\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Realm not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      },\n      \"put\": {\n        \"tags\": [\n          \"Password policy\"\n        ],\n        \"summary\": \"Update password policy configuration\",\n        \"operationId\": \"updatePasswordPolicy\",\n        \"requestBody\": {\n          \"description\": \"The JSON body of the request. Contains parameters of password policy configuration.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/PasswordPolicy\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Successfully updated. Response doesn't have a body.\"\n          },\n          \"400\": {\n            \"description\": \"Failed. The input is invalid.\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorEnvelope\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Realm not found\"\n          }\n        },\n        \"security\": [\n          {\n            \"Api-Token\": []\n          }\n        ],\n        \"x-token-scopes\": [\n          \"`ServiceProviderAPI` (Service Provider API)\"\n        ]\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"backupConfigDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"enabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Backups are enabled (`true`) or disabled (`false`).\",\n            \"readOnly\": true\n          },\n          \"datacenter\": {\n            \"type\": \"string\",\n            \"description\": \"Datacenter which will create backups\",\n            \"readOnly\": true\n          },\n          \"storagePath\": {\n            \"type\": \"string\",\n            \"description\": \"A full path to the backup archive\",\n            \"readOnly\": true\n          },\n          \"includeRumData\": {\n            \"type\": \"boolean\",\n            \"description\": \"Include user sessions (`true`) or GDPR compliance (`false`)\"\n          },\n          \"includeLm20Data\": {\n            \"type\": \"boolean\",\n            \"description\": \"Include (`true`) or exclude (`false`) Log Monitoring v2 data\"\n          },\n          \"includeTsMetricData\": {\n            \"type\": \"boolean\",\n            \"description\": \"Include time series metric-data (`true`) or retain configuration data only (`false`))\"\n          },\n          \"bandwidthLimitMbits\": {\n            \"type\": \"integer\",\n            \"description\": \"Cassandra backup bandwidth limit in Mbps\",\n            \"format\": \"int32\"\n          },\n          \"maxEsSnapshotsToClean\": {\n            \"type\": \"integer\",\n            \"description\": \"Max number of Elasticsearch snapshots to clean. Elasticsearch snapshots won't be created anymore if there will be more backups to clean than this value.\",\n            \"format\": \"int32\"\n          },\n          \"cassandraScheduledTime\": {\n            \"type\": \"integer\",\n            \"description\": \"Hour to start Cassandra backups each day.\",\n            \"format\": \"int32\"\n          },\n          \"pauseBackups\": {\n            \"type\": \"boolean\",\n            \"description\": \"Pauses Elasticsearch and Cassandra backups. In comparison to enable/disable backup, this option does not modify any configuration like Elasticsearch properties.\"\n          }\n        },\n        \"description\": \"Configuration of the cluster backup.\",\n        \"example\": {\n          \"datacenter\": \"dc1\",\n          \"enabled\": true,\n          \"storagePath\": \"/efs/backup\",\n          \"includeRumData\": true,\n          \"includeLm20Data\": true,\n          \"includeTsMetricData\": true,\n          \"bandwidthLimitMbits\": 240,\n          \"maxEsSnapshotsToClean\": 30,\n          \"cassandraScheduledTime\": 22,\n          \"pauseBackups\": false\n        }\n      },\n      \"StorageTestImpl\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"storagePath\": {\n            \"type\": \"string\"\n          },\n          \"storageError\": {\n            \"type\": \"string\"\n          },\n          \"inProgress\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"FileDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"content\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"byte\"\n            }\n          }\n        }\n      },\n      \"InstallerMetadata\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"clusterBackupPath\": {\n            \"type\": \"string\",\n            \"description\": \"Network attached storage path for the backup\"\n          },\n          \"elasticsearchBackupPath\": {\n            \"type\": \"string\",\n            \"description\": \"Elasticsearch repository used for the backup\"\n          },\n          \"datacenterWithBackupEnabled\": {\n            \"type\": \"string\",\n            \"description\": \"Datacenter for backup, used only in multidc setups\"\n          }\n        },\n        \"description\": \"Metadata used by installer\"\n      },\n      \"AdditionalAddresses\": {\n        \"required\": [\n          \"additionalAddresses\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"additionalAddresses\": {\n            \"type\": \"array\",\n            \"description\": \"Additional WebUi addresses\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Additional WebUi addresses\"\n            }\n          }\n        }\n      },\n      \"AddressWrapper\": {\n        \"required\": [\n          \"address\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"Address\"\n          }\n        }\n      },\n      \"AddressWrapperForAgentsImpl\": {\n        \"required\": [\n          \"address\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"Address\"\n          },\n          \"newAddress\": {\n            \"type\": \"string\",\n            \"description\": \"New address\"\n          }\n        }\n      },\n      \"ClusterNodesConfigDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"clusterNodes\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/NodeConfigDto\"\n            }\n          }\n        }\n      },\n      \"NodeConfigDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"webUI\": {\n            \"type\": \"boolean\"\n          },\n          \"agent\": {\n            \"type\": \"boolean\"\n          },\n          \"datacenter\": {\n            \"type\": \"string\"\n          },\n          \"kubernetesRole\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Cluster\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"integer\",\n            \"description\": \"Node ID\",\n            \"format\": \"int32\"\n          },\n          \"clusterMemberAddress\": {\n            \"type\": \"string\",\n            \"description\": \"Cluster member address\"\n          },\n          \"operationState\": {\n            \"type\": \"string\",\n            \"description\": \"Operation state\"\n          },\n          \"buildVersion\": {\n            \"type\": \"string\",\n            \"description\": \"Server version\"\n          },\n          \"osInfo\": {\n            \"type\": \"string\",\n            \"description\": \"OS info\"\n          },\n          \"jvmInfo\": {\n            \"type\": \"string\",\n            \"description\": \"JVM info\"\n          },\n          \"dnsEntryPointUris\": {\n            \"type\": \"array\",\n            \"description\": \"DNS entry point URIs\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"uri\"\n            }\n          },\n          \"restServiceRootUris\": {\n            \"type\": \"array\",\n            \"description\": \"REST service root URIs\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"uri\"\n            }\n          },\n          \"communicationUris\": {\n            \"type\": \"array\",\n            \"description\": \"Communication URIs\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"uri\"\n            }\n          }\n        }\n      },\n      \"DatacenterMigrationDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"newDatacenterName\": {\n            \"type\": \"string\"\n          },\n          \"nodesIp\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"MigrationState\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Current status of migration\",\n            \"enum\": [\n              \"FAILED\",\n              \"IN_PROGRESS\",\n              \"NOT_STARTED\",\n              \"SUCCEEDED\"\n            ]\n          },\n          \"startedAt\": {\n            \"type\": \"integer\",\n            \"description\": \"Timestamp (milliseconds format) of migration start\",\n            \"format\": \"int64\"\n          },\n          \"finishedAt\": {\n            \"type\": \"integer\",\n            \"description\": \"Timestamp (milliseconds format) of migration finish\",\n            \"format\": \"int64\"\n          },\n          \"details\": {\n            \"type\": \"string\",\n            \"description\": \"Additional information about migration state\"\n          }\n        },\n        \"description\": \"State of in-server config migration for single component\"\n      },\n      \"SingleToMultiDcMigrationClusterState\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"singleToMultiDcMigration\": {\n            \"$ref\": \"#/components/schemas/MigrationState\"\n          },\n          \"migrationSteps\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/MigrationState\"\n            },\n            \"description\": \"Status of the various sub steps of the migration\"\n          }\n        },\n        \"description\": \"State of the cluster during migration of single datacenter to multi datacenter and its substeps\"\n      },\n      \"InServerConfigDatacenterMigrationState\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"componentMigrationStates\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/MigrationState\"\n            },\n            \"description\": \"Map of (component, migration state) pairs\"\n          }\n        },\n        \"description\": \"State of in-server config migration for all components\"\n      },\n      \"DatacenterDesc\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"datacenterMembersList\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/DatacenterMember\"\n            }\n          },\n          \"newDatacenter\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"description\": \"Map of multidatacenter topology\"\n      },\n      \"DatacenterMember\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"nodeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"nodeIp\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"MultiDatacenterTopology\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"datacenterTopology\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/DatacenterDesc\"\n            },\n            \"description\": \"Map of multidatacenter topology\"\n          },\n          \"newDatacenterName\": {\n            \"type\": \"string\"\n          },\n          \"oldDatacenterName\": {\n            \"type\": \"string\"\n          }\n        },\n        \"description\": \"Multi datacenter topology\"\n      },\n      \"ClusterPreparationForReplicationDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"done\": {\n            \"type\": \"boolean\"\n          },\n          \"success\": {\n            \"type\": \"boolean\"\n          },\n          \"percentDone\": {\n            \"type\": \"number\",\n            \"format\": \"double\"\n          },\n          \"errorMessage\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ElasticsearchUpgradeDTO\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"upgradePossible\": {\n            \"type\": \"boolean\"\n          },\n          \"reason\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ElasticsearchOperationDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"success\": {\n            \"type\": \"boolean\"\n          },\n          \"reason\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"FirewallNodeIp\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ipAddress\": {\n            \"type\": \"string\",\n            \"description\": \"Node IP address to remove from firewall\"\n          }\n        }\n      },\n      \"FinalizeNodeJoiningRequestDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"ip\": {\n            \"type\": \"string\"\n          },\n          \"result\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"ABORTED\",\n              \"FAILURE\",\n              \"IN_PROGRESS\",\n              \"STOPPED\",\n              \"SUCCESS\",\n              \"UNKNOWN\"\n            ]\n          },\n          \"details\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"NodeJoiningPreCheckStatusDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"nodeJoiningPreCheckFinished\": {\n            \"type\": \"boolean\"\n          },\n          \"canRunNodeInstallation\": {\n            \"type\": \"boolean\"\n          },\n          \"details\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ProductVersion\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"productVersion\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"NodeJoiningInitializePreCheckResponseDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"requestId\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"ResponsibilityOverrideDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"responsibilityNodeIds\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          }\n        }\n      },\n      \"InstallerStatusDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"status\": {\n            \"type\": \"string\"\n          },\n          \"details\": {\n            \"type\": \"string\"\n          },\n          \"lastFinishedStep\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"RemoveNode\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"nodeId\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"ipAddress\": {\n            \"type\": \"string\"\n          }\n        },\n        \"description\": \"Information which node is going to be removed.\"\n      },\n      \"Preferences\": {\n        \"required\": [\n          \"supportSendBilling\",\n          \"supportSendClusterHealth\",\n          \"suppressNonBillingRelevantData\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"certificateManagementEnabled\": {\n            \"type\": \"boolean\"\n          },\n          \"certificateManagementPossible\": {\n            \"type\": \"boolean\"\n          },\n          \"supportSendBilling\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, usage and billing information will be reported.\"\n          },\n          \"suppressNonBillingRelevantData\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, usage and billing information will NOT be reported.\"\n          },\n          \"supportSendClusterHealth\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, Dynatrace cluster health will be reported.\"\n          },\n          \"supportSendEvents\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, Dynatrace cluster health and OneAgent events will be reported.\"\n          },\n          \"supportAllowRemoteAccess\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, audited remote-access to your Dynatrace configuration is allowed settings.\"\n          },\n          \"remoteAccessOnDemandOnly\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, audited access to your Dynatrace cluster is allowed by approved Dynatrace employees otherwise by privileged Dynatrace employees.\"\n          },\n          \"communityCreateUser\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, each new user will get an invitation to set up a Dynatrace user account to access Dynatrace support resources user upon first login.\"\n          },\n          \"communityExternalSearch\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, results from Documentation are included in platform search.\"\n          },\n          \"backupEnabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"Deprecated. Use the backup configuration endpoint. If true, backups are enabled.\",\n            \"readOnly\": true\n          },\n          \"ruxitMonitorsRuxit\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, Dynatrace OneAgent monitors Dynatrace.\"\n          },\n          \"telemetrySharing\": {\n            \"type\": \"boolean\"\n          },\n          \"helpChatEnabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, live, in-product assistance with our Product Experts is enabled.\"\n          },\n          \"readOnlyRemoteAccessAllowed\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, audited, read-only remote access to your Dynatrace configuration settings is allowed.\"\n          }\n        }\n      },\n      \"ConstraintViolation\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"parameterLocation\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"PATH\",\n              \"PAYLOAD_BODY\",\n              \"QUERY\"\n            ]\n          },\n          \"location\": {\n            \"type\": \"string\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          },\n          \"path\": {\n            \"type\": \"string\"\n          }\n        },\n        \"description\": \"A list of constraint violations\"\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"constraintViolations\": {\n            \"type\": \"array\",\n            \"description\": \"A list of constraint violations\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ConstraintViolation\"\n            }\n          },\n          \"message\": {\n            \"type\": \"string\",\n            \"description\": \"The error message\"\n          },\n          \"code\": {\n            \"type\": \"integer\",\n            \"description\": \"The HTTP status code\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"ErrorEnvelope\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"error\": {\n            \"$ref\": \"#/components/schemas/Error\"\n          }\n        }\n      },\n      \"CertificateDetails\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"issuer\": {\n            \"type\": \"string\",\n            \"description\": \"Issuer\"\n          },\n          \"subject\": {\n            \"type\": \"string\",\n            \"description\": \"Subject\"\n          },\n          \"expirationTimestamp\": {\n            \"type\": \"integer\",\n            \"description\": \"Expiration timestamp\",\n            \"format\": \"int64\"\n          },\n          \"expirationDate\": {\n            \"type\": \"string\",\n            \"description\": \"Expiration date\"\n          }\n        },\n        \"description\": \"X.509 certificate for signing/encryption\"\n      },\n      \"certDto\": {\n        \"required\": [\n          \"privateKeyEncoded\",\n          \"publicKeyCertificateEncoded\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"privateKeyEncoded\": {\n            \"type\": \"string\",\n            \"description\": \"Private key PKCS #8 standard, PEM base64-encoded format\"\n          },\n          \"publicKeyCertificateEncoded\": {\n            \"type\": \"string\",\n            \"description\": \"Certificate X.509 standard, PEM base64-encoded format\"\n          }\n        },\n        \"description\": \"Certificate configuration.\",\n        \"example\": {\n          \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n          \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\"\n        }\n      },\n      \"SmtpConfiguration\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"hostName\": {\n            \"type\": \"string\",\n            \"description\": \"Host name\"\n          },\n          \"port\": {\n            \"type\": \"integer\",\n            \"description\": \"Integer value of port\",\n            \"format\": \"int32\"\n          },\n          \"userName\": {\n            \"type\": \"string\",\n            \"description\": \"User name\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"description\": \"Password\"\n          },\n          \"isPasswordConfigured\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, a password has been configured.\"\n          },\n          \"connectionSecurity\": {\n            \"type\": \"string\",\n            \"description\": \"Connection security\",\n            \"enum\": [\n              \"NO_ENCRYPTION\",\n              \"OPTIONAL_STARTTLS\",\n              \"REQUIRE_STARTTLS\",\n              \"TLS\"\n            ]\n          },\n          \"senderEmailAddress\": {\n            \"type\": \"string\",\n            \"description\": \"Sender email address\"\n          },\n          \"allowFallbackViaMissionControl\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, we will send e-mails via Mission Control in case of problems with SMTP server.\"\n          },\n          \"useSmtpServer\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, we will send e-mails via SMTP server.\"\n          }\n        }\n      },\n      \"SSLDetails\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"inProgress\": {\n            \"type\": \"boolean\"\n          },\n          \"expirationDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"restartRequired\": {\n            \"type\": \"boolean\"\n          },\n          \"customKeyStore\": {\n            \"type\": \"boolean\"\n          },\n          \"customKeyStoreWritable\": {\n            \"type\": \"boolean\"\n          },\n          \"issuer\": {\n            \"type\": \"string\"\n          },\n          \"default\": {\n            \"type\": \"boolean\"\n          },\n          \"subject\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"CertificateStoreStatus\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"detailedError\": {\n            \"type\": \"string\"\n          },\n          \"certificateStoreStatus\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"BAD_REQUEST\",\n              \"CERTIFICATE_CHAIN_IS_INVALID\",\n              \"CERTIFICATE_IS_EXPIRED\",\n              \"CERTIFICATE_STORED_BUT_NOT_REFRESHED\",\n              \"ERROR\",\n              \"GENERAL_ERROR_WHILE_STORING_CERTIFICATE\",\n              \"IN_PROGRESS\",\n              \"NOT_FOUND\",\n              \"OK\",\n              \"PRIVATE_KEY_DOES_NOT_MATCH_PUBLIC_KEY_CERTIFICATE\",\n              \"PRIVATE_KEY_IS_INVALID\",\n              \"PUBLIC_KEY_CERTIFICATE_IS_INVALID\"\n            ]\n          }\n        }\n      },\n      \"sslCertDto\": {\n        \"required\": [\n          \"privateKeyEncoded\",\n          \"publicKeyCertificateEncoded\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"privateKeyEncoded\": {\n            \"type\": \"string\",\n            \"description\": \"Private key PKCS #8 standard, PEM base64-encoded format\"\n          },\n          \"publicKeyCertificateEncoded\": {\n            \"type\": \"string\",\n            \"description\": \"Certificate X.509 standard, PEM base64-encoded format, server certificate\"\n          },\n          \"certificateChainEncoded\": {\n            \"type\": \"string\",\n            \"description\": \"Certificate(s) X.509 standard, PEM base64-encoded format, intermediate and root certificates\"\n          }\n        },\n        \"description\": \"SSL certificate configuration.\",\n        \"example\": {\n          \"privateKeyEncoded\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEow...aHzMvp\\n-----END RSA PRIVATE KEY-----\",\n          \"publicKeyCertificateEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\",\n          \"certificateChainEncoded\": \"-----BEGIN CERTIFICATE-----\\nMIIDKT...XbTK+M\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIDKT...bXTK+M\\n-----END CERTIFICATE-----\"\n        }\n      },\n      \"SupportArchiveDownload\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"downloadState\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"FINISHED\",\n              \"PROCESSING\",\n              \"STARTING\",\n              \"TRANSFERING\"\n            ]\n          },\n          \"report\": {\n            \"$ref\": \"#/components/schemas/SupportArchiveReport\"\n          }\n        }\n      },\n      \"SupportArchiveReport\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"parts\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/SupportArchiveReportPart\"\n            }\n          }\n        }\n      },\n      \"SupportArchiveReportPart\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"numberOfFiles\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"uncompressedTotalBytes\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"compressedTotalBytes\": {\n            \"type\": \"integer\",\n            \"format\": \"int64\"\n          },\n          \"source\": {\n            \"type\": \"string\"\n          },\n          \"errors\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      },\n      \"OnPremClusterSupportArchiveRequestImpl\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"numberOfDays\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"includeServerData\": {\n            \"type\": \"boolean\"\n          },\n          \"includeActiveGateData\": {\n            \"type\": \"boolean\"\n          },\n          \"includeLogs\": {\n            \"type\": \"boolean\"\n          },\n          \"includeDebugLogs\": {\n            \"type\": \"boolean\"\n          },\n          \"includeAgentRegistryLogs\": {\n            \"type\": \"boolean\"\n          },\n          \"includeLauncherLogs\": {\n            \"type\": \"boolean\"\n          },\n          \"includeMonitoringConfigAuditLogs\": {\n            \"type\": \"boolean\"\n          },\n          \"includeOtherAuditLogs\": {\n            \"type\": \"boolean\"\n          }\n        }\n      },\n      \"UpdateEntryChangeRequestDto\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"excludedFromDownload\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, update package will be excluded from download and removed from storage. If false, already excluded package will be re-downloaded.\"\n          }\n        }\n      },\n      \"UpgradeStartupState\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"state\": {\n            \"type\": \"string\",\n            \"description\": \"System precondition check state\",\n            \"enum\": [\n              \"ERROR\",\n              \"FINISHED\",\n              \"LAUNCHING\",\n              \"NODEKEEPER_UPGRADE\",\n              \"SYSTEM_CHECK\",\n              \"UNDEFINED\"\n            ]\n          },\n          \"error\": {\n            \"type\": \"string\",\n            \"description\": \"Error\"\n          }\n        }\n      },\n      \"InstallationPackage\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"excludedFromDownload\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, update package is excluded from download to save storage\"\n          },\n          \"deletedFromMCStorage\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, update package is removed from Dynatrace repository. Once you remove it from your cluster it will be gone permanently.\"\n          },\n          \"readyNodeIds\": {\n            \"type\": \"array\",\n            \"description\": \"IDs of nodes that have finished package processing (i.e, downloaded or removed depending on status)\",\n            \"items\": {\n              \"type\": \"integer\",\n              \"format\": \"int32\"\n            }\n          },\n          \"fileSizeInBytes\": {\n            \"type\": \"integer\",\n            \"description\": \"Total file size of a package in bytes\",\n            \"format\": \"int64\"\n          },\n          \"deleteEnabled\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, it's possible to remove this package via the REST API or the WebUi\"\n          },\n          \"countOfTenantsUsingThisAgentAsStandardVersion\": {\n            \"type\": \"integer\",\n            \"description\": \"Count of tenants where this agent is configured as standard agent version. Applies to OneAgent type only.\",\n            \"format\": \"int32\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"description\": \"Type\",\n            \"enum\": [\n              \"AGENT\",\n              \"DEPLOYMENT_ORCHESTRATION\",\n              \"DOCKER_AGENT\",\n              \"JS_AGENT\",\n              \"NGINX\",\n              \"ODIN\",\n              \"SERVER\",\n              \"SG\",\n              \"SYNTHETIC\"\n            ]\n          },\n          \"version\": {\n            \"type\": \"string\",\n            \"description\": \"Version\"\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"description\": \"Cluster-wide status\",\n            \"enum\": [\n              \"EXCLUDED\",\n              \"MISSING\",\n              \"PROBLEM\",\n              \"PROGRESS\",\n              \"READY\",\n              \"REMOVED\",\n              \"REMOVING\",\n              \"UPLOADING\"\n            ]\n          }\n        }\n      },\n      \"GroupConfig\": {\n        \"required\": [\n          \"id\",\n          \"isClusterAdminGroup\",\n          \"name\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"isClusterAdminGroup\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, then the group has the \\\"cluster administrator\\\" rights. Users assigned to a group with this permission are automatically given administrator access rights for all environments. They have access to Cluster Management Console and can manage your monitoring environments and Dynatrace Server. Users assigned to groups with this permission can also: Add new Dynatrace Server nodes, upgrade Dynatrace Server, manage Dynatrace Managed users and user groups, install Dynatrace OneAgent into any monitoring environment, configure monitoring settings for any monitoring environment.\"\n          },\n          \"isAccessAccount\": {\n            \"type\": \"boolean\",\n            \"description\": \"(only applicable for Dynatrace Platform Subscription license model) If true, then the group has the \\\"Access account\\\" rights. Users assigned to a group with this permission can access account.dynatrace.com service to see Dynatrace Platform Subscription utilization and manage license quotas.\"\n          },\n          \"isManageAccount\": {\n            \"type\": \"boolean\",\n            \"description\": \"If true, then the group has \\\"Edit billing & account info\\\" rights. Users assigned to a group with this permission can access myaccount.dynatrace.com service to see product usage statistics, license utilization and account information.\"\n          },\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"Group ID. Leave empty if creating group. Set if updating group.\"\n          },\n          \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Group name\"\n          },\n          \"ldapGroupNames\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"description\": \"LDAP group names\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"ssoGroupNames\": {\n            \"uniqueItems\": true,\n            \"type\": \"array\",\n            \"description\": \"SSO group names. If defined it's used to map SSO group name to Dynatrace group name, otherwise mapping is done by group name\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"accessRight\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"type\": \"array\",\n              \"properties\": {\n                \"empty\": {\n                  \"type\": \"boolean\"\n                }\n              },\n              \"description\": \"Access rights\",\n              \"items\": {\n                \"type\": \"string\",\n                \"description\": \"Access rights\"\n              }\n            },\n            \"description\": \"Access rights\"\n          }\n        },\n        \"description\": \"The configuration of the group.\"\n      },\n      \"MzListForEnvironment\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"environmentUuid\": {\n            \"type\": \"string\",\n            \"description\": \"Environment UUID\"\n          },\n          \"mzPermissions\": {\n            \"type\": \"array\",\n            \"description\": \"List of management zone models with permissions\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MzPermissionsList\"\n            }\n          }\n        }\n      },\n      \"MzPermissionsForGroup\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"groupId\": {\n            \"type\": \"string\",\n            \"description\": \"Group ID\"\n          },\n          \"mzPermissionsPerEnvironment\": {\n            \"type\": \"array\",\n            \"description\": \"List of management zone permissions per environment\",\n            \"items\": {\n              \"$ref\": \"#/components/schemas/MzListForEnvironment\"\n            }\n          }\n        }\n      },\n      \"MzPermissionsList\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"mzId\": {\n            \"type\": \"string\",\n            \"description\": \"The ID of the required management zone\"\n          },\n          \"permissions\": {\n            \"type\": \"array\",\n            \"description\": \"The list of permissions for the required management zone\",\n            \"items\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"DEMO_USER\",\n                \"LOG_VIEWER\",\n                \"MANAGE_SECURITY_PROBLEMS\",\n                \"MANAGE_SETTINGS\",\n                \"REPLAY_SESSION_DATA\",\n                \"REPLAY_SESSION_DATA_WITHOUT_MASKING\",\n                \"VIEWER\",\n                \"VIEW_SENSITIVE_REQUEST_DATA\"\n              ]\n            }\n          }\n        }\n      },\n      \"UserConfig\": {\n        \"required\": [\n          \"email\",\n          \"firstName\",\n          \"id\",\n          \"lastName\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"description\": \"User ID\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"description\": \"User's email address\"\n          },\n          \"firstName\": {\n            \"type\": \"string\",\n            \"description\": \"User's first name\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"description\": \"User's last name\"\n          },\n          \"passwordClearText\": {\n            \"type\": \"string\",\n            \"description\": \"User's password in a clear text; used only to set initial password\"\n          },\n          \"groups\": {\n            \"type\": \"array\",\n            \"description\": \"List of user's user group IDs.\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"description\": \"The configuration of the user.\"\n      },\n      \"AuthenticationMode\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"authorizationProvider\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"INTERNAL\",\n              \"LDAP\"\n            ]\n          },\n          \"ssoOnly\": {\n            \"type\": \"boolean\"\n          },\n          \"authenticationProvider\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"INTERNAL\",\n              \"LDAP\"\n            ]\n          }\n        }\n      },\n      \"LdapConnectionDescImpl\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"shouldUseSecureConnection\": {\n            \"type\": \"boolean\"\n          },\n          \"hostName\": {\n            \"type\": \"string\"\n          },\n          \"port\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"bindDn\": {\n            \"type\": \"string\"\n          },\n          \"bindPassword\": {\n            \"type\": \"string\"\n          },\n          \"bindPasswordSet\": {\n            \"type\": \"boolean\"\n          },\n          \"referralHopLimit\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          }\n        }\n      },\n      \"LdapGroupsQueryDtoImpl\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"groupsDn\": {\n            \"type\": \"string\"\n          },\n          \"groupsFilter\": {\n            \"type\": \"string\"\n          },\n          \"groupsIdAttribute\": {\n            \"type\": \"string\"\n          },\n          \"groupsDisplayNameAttribute\": {\n            \"type\": \"string\"\n          },\n          \"groupsMemberAttribute\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"LdapUsersQueryDescImpl\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"usersBaseDn\": {\n            \"type\": \"string\"\n          },\n          \"usersAccountNameAttribute\": {\n            \"type\": \"string\"\n          },\n          \"usersFirstNameAttribute\": {\n            \"type\": \"string\"\n          },\n          \"usersLastNameAttribute\": {\n            \"type\": \"string\"\n          },\n          \"usersEmailAttribute\": {\n            \"type\": \"string\"\n          },\n          \"usersMembershipAttribute\": {\n            \"type\": \"string\"\n          },\n          \"usersFilter\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"AuthenticationModel\": {\n        \"required\": [\n          \"authenticationProvider\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"authenticationProvider\": {\n            \"type\": \"string\",\n            \"description\": \"Defines the authentication provider\",\n            \"enum\": [\n              \"INTERNAL\",\n              \"LDAP\"\n            ]\n          },\n          \"authorizationProvider\": {\n            \"type\": \"string\",\n            \"description\": \"Defines the authorization provider\",\n            \"enum\": [\n              \"INTERNAL\",\n              \"LDAP\"\n            ]\n          },\n          \"ssoOnly\": {\n            \"type\": \"boolean\",\n            \"description\": \"Defines login page type as SSO\",\n            \"readOnly\": true\n          }\n        }\n      },\n      \"InternetProxy\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"scheme\": {\n            \"type\": \"string\",\n            \"description\": \"Protocol which proxy server uses\"\n          },\n          \"server\": {\n            \"type\": \"string\",\n            \"description\": \"Address (either IP or Hostname) of proxy server\"\n          },\n          \"port\": {\n            \"type\": \"integer\",\n            \"description\": \"Port of proxy server\",\n            \"format\": \"int32\"\n          },\n          \"nonProxyHosts\": {\n            \"type\": \"array\",\n            \"description\": \"Definition of hosts for which proxy won't be used.\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Definition of hosts for which proxy won't be used.\"\n            }\n          },\n          \"userOrPasswordDefined\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates if user/password for proxy is configured\"\n          }\n        },\n        \"description\": \"Configuration of proxy server for Internet connection\"\n      },\n      \"ProxyConfigurations\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"configurations\": {\n            \"type\": \"object\",\n            \"additionalProperties\": {\n              \"$ref\": \"#/components/schemas/InternetProxy\"\n            },\n            \"description\": \"Map of (Data Center name, Proxy) pairs\"\n          }\n        },\n        \"description\": \"Configurations of proxy servers for all existing Data Centers\"\n      },\n      \"InternetProxyChangeRequest\": {\n        \"required\": [\n          \"port\",\n          \"scheme\",\n          \"server\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"scheme\": {\n            \"pattern\": \"http[s]?\",\n            \"type\": \"string\",\n            \"description\": \"Protocol which proxy server uses\",\n            \"enum\": [\n              \"http\",\n              \"https\"\n            ]\n          },\n          \"server\": {\n            \"pattern\": \"^[a-zA-Z0-9:/.-]*$\",\n            \"type\": \"string\",\n            \"description\": \"Address (either IP or Hostname) of proxy server\"\n          },\n          \"port\": {\n            \"maximum\": 65535,\n            \"minimum\": 0,\n            \"type\": \"integer\",\n            \"description\": \"Port of proxy server\",\n            \"format\": \"int32\"\n          },\n          \"user\": {\n            \"type\": \"string\",\n            \"description\": \"User of proxy server, null means do not change previous value\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"description\": \"Password of proxy server, null means do not change previous value\"\n          },\n          \"nonProxyHosts\": {\n            \"type\": \"array\",\n            \"description\": \"Definition of hosts for which proxy won't be used. You can define multiple hosts. Each host can start or end with wildcard '*' for instance to match whole domain.\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Definition of hosts for which proxy won't be used. You can define multiple hosts. Each host can start or end with wildcard '*' for instance to match whole domain.\"\n            }\n          }\n        },\n        \"description\": \"Configuration of proxy server for Internet connection\"\n      },\n      \"ConnectionStatus\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"connectionOk\": {\n            \"type\": \"boolean\",\n            \"description\": \"Connection test result\"\n          },\n          \"testExecuted\": {\n            \"type\": \"boolean\",\n            \"description\": \"Indicates whether test was executed at all\"\n          },\n          \"testExecutionMessage\": {\n            \"type\": \"string\",\n            \"description\": \"Additional comments usually indicates why test was not executed\"\n          }\n        },\n        \"description\": \"Internet connection test result\"\n      },\n      \"PasswordPolicy\": {\n        \"required\": [\n          \"minNumberOfDigits\",\n          \"minNumberOfLowercaseChars\",\n          \"minNumberOfNonAlphanumericChars\",\n          \"minNumberOfUppercaseChars\",\n          \"minPasswordLength\"\n        ],\n        \"type\": \"object\",\n        \"properties\": {\n          \"minPasswordLength\": {\n            \"maximum\": 128,\n            \"minimum\": 8,\n            \"type\": \"integer\",\n            \"description\": \"Minimum password length\",\n            \"format\": \"int64\"\n          },\n          \"minNumberOfUppercaseChars\": {\n            \"maximum\": 128,\n            \"minimum\": 0,\n            \"type\": \"integer\",\n            \"description\": \"Minimum number of uppercase characters\",\n            \"format\": \"int64\"\n          },\n          \"minNumberOfLowercaseChars\": {\n            \"maximum\": 128,\n            \"minimum\": 0,\n            \"type\": \"integer\",\n            \"description\": \"Minimum number of lowercase characters\",\n            \"format\": \"int64\"\n          },\n          \"minNumberOfDigits\": {\n            \"maximum\": 128,\n            \"minimum\": 0,\n            \"type\": \"integer\",\n            \"description\": \"Minimum number of digits\",\n            \"format\": \"int64\"\n          },\n          \"minNumberOfNonAlphanumericChars\": {\n            \"maximum\": 128,\n            \"minimum\": 0,\n            \"type\": \"integer\",\n            \"description\": \"Minimum number of non-alphanumeric characters\",\n            \"format\": \"int64\"\n          }\n        },\n        \"description\": \"Password policy configuration.\"\n      }\n    },\n    \"securitySchemes\": {\n      \"Api-Token\": {\n        \"type\": \"apiKey\",\n        \"description\": \"Dynatrace API Token\\n\\n The token is passed in the **Authorization** header in the following format: `Authorization: Api-Token abcdefjhij1234567890`.\",\n        \"name\": \"Authorization\",\n        \"in\": \"header\"\n      }\n    }\n  }\n}",
            "contentType": "yaml",
            "_type": "api_spec"
        },
        {
            "_id": "env_env_f731864e342c3b0f25fefa0bd8534f7aa13d7591_sub",
            "parentId": "env_f731864e342c3b0f25fefa0bd8534f7aa13d7591",
            "modified": 1666702455407,
            "created": 1666702455407,
            "name": "Dynatrace Example Env",
            "data": {
                "scheme": "https",
                "base_path": "",
                "host": "*.live.dynatrace.com OR your-dtmanaged.com/e/ENVID",
                "authorization": "Api-Token REPLACE_ME_WITH_TOKEN"
            },
            "dataPropertyOrder": null,
            "color": null,
            "isPrivate": false,
            "metaSortKey": 1666702455407,
            "_type": "environment"
        }
    ]
}